[tool.isort]
    extend_skip = [".json", ".md"]
    profile = "black"
    include_trailing_comma = true
    line_length = 79
    force_alphabetical_sort_within_sections = true
    skip_glob = ["stubs/*"]

[tool.pylint.BASIC]
    good-names = [
        "_",
        "a",
        "ax",
        "b",
        "c",
        "ci",
        "cm",
        "db",
        "df",
        "e",
        "el",
        "f",
        "fn",
        "fn",
        "fp",
        "fs",
        "ft",
        "gc",
        "io",
        "ip",
        "ix",
        "jx",
        "k",
        "le",
        "lr",
        "m",
        "ms",
        "n",
        "nl",
        "op",
        "p",
        "pf",
        "q",
        "qa",
        "r",
        "s",
        "t",
        "th",
        "tn",
        "tp",
        "tz",
        "v",
        "w",
        "ws",
        "x",
        "x1",
        "x2",
        "y",
        "y1",
        "y2",
    ]
    bad-names = [
        "i",
        "j",
    ]

[tool.pylint."MESSAGES CONTROL"]
    disable = [
        "duplicate-code",
        "fixme",
        "global-statement",
        "import-outside-toplevel",
        "invalid-unary-operand-type",
        "missing-docstring",
        "not-an-iterable",
        "not-callable",
        "protected-access",
        "too-many-arguments",
        "too-many-branches",
        "too-many-instance-attributes",
        "too-many-lines",
        "too-many-locals",
        "too-many-public-methods",
        "too-many-return-statements",
        "too-many-statements",
        "unspecified-encoding",
        "unsubscriptable-object",
        "unused-wildcard-import"
    ]

[tool.pylint.VARIABLES]
    init-import = "yes"

[tool.pylint.IMPORTS]
    allow-wildcard-with-all = "yes"

[tool.pytest.ini_options]
    filterwarnings = [
        "error",
        "ignore::DeprecationWarning",
        "ignore::RuntimeWarning",
        "ignore::ImportWarning",
    ]
    markers = [
        "local: marks tests as local only (deselect with '-m \"not local\"')",
    ]

[tool.coverage.run]
    branch = true
    omit = [
        "*/__init__*",
        "*/sitecustomize*",
    ]

[tool.coverage.report]
    exclude_lines = [
        "if TYPE_CHECKING:",
        "raise NotImplementedError()",
    ]
