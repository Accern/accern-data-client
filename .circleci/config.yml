version: 2

experimental:
  pipelines: true

workflows:
  version: 2
  test:
    jobs:
      - test-3.8

jobs:
  test-3.8:
    docker:
      - image: cimg/python:3.8.12
        environment:
          ENV: circleci

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-py38-dependencies-{{ checksum "requirements.lint.txt" }}-{{ checksum "requirements.txt" }}

      - run:
          name: Install Dependencies
          command: |
            make create-env

      - save_cache:
          paths:
            - venv
          key: v1-py38-dependencies-{{ checksum "requirements.lint.txt" }}-{{ checksum "requirements.txt" }}

      - run:
          name: Lint Code (use uppercase TODO, XXX, FIXME, NOTE and explain nopep8)
          command: |
            make lint-comment

      - run:
          name: Lint Code (sort requirements)
          command: |
            make lint-requirements

      - run:
          name: Lint Code (use f"" style formating)
          command: |
            make lint-stringformat

      - run:
          name: Lint Code (no f"a", "{a}", or f'{a}')
          command: |
            make lint-forgottenformat

      - run:
          name: Lint Code (missing trailing comma)
          command: |
            . venv/bin/activate
            make lint-flake8

      - run:
          name: Lint Code (pycodestyle)
          command: |
            . venv/bin/activate
            make lint-pycodestyle

      - run:
          name: Lint Code (type-check)
          command: |
            . venv/bin/activate
            make lint-type-check

      - run:
          name: Lint Code (pylint)
          command: |
            . venv/bin/activate
            make lint-pylint

      - run:
          name: Lint Code (docstring)
          command: |
            . venv/bin/activate
            make lint-docstring

      - store_artifacts:
          path: test-reports
          destination: test-reports
