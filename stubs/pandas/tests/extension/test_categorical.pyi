# Stubs for pandas.tests.extension.test_categorical (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name,c-extension-no-member,too-many-ancestors

from typing import Any
from pandas.tests.extension import base

def make_data():
    ...

def dtype():
    ...

def data():
    ...

def data_missing():
    ...

def data_for_sorting():
    ...

def data_missing_for_sorting():
    ...

def na_value():
    ...

def data_for_grouping():
    ...


class TestDtype(base.BaseDtypeTests):
    ...


class TestInterface(base.BaseInterfaceTests):
    def test_memory_usage(self, data: Any) -> None:
        ...


class TestConstructors(base.BaseConstructorsTests):
    ...


class TestReshaping(base.BaseReshapingTests):
    def test_ravel(self, data: Any) -> None:
        ...


class TestGetitem(base.BaseGetitemTests):
    skip_take: Any = ...
    def test_getitem_scalar(self, data: Any) -> None:
        ...

    def test_take(self, data: Any, na_value: Any, na_cmp: Any) -> None:
        ...

    def test_take_negative(self, data: Any) -> None:
        ...

    def test_take_pandas_style_negative_raises(self, data: Any, na_value: Any) -> None:
        ...

    def test_take_non_na_fill_value(self, data_missing: Any) -> None:
        ...

    def test_take_out_of_bounds_raises(self, data: Any, allow_fill: Any):
        ...

    def test_take_series(self, data: Any) -> None:
        ...

    def test_reindex_non_na_fill_value(self, data_missing: Any) -> None:
        ...

    def test_take_empty(self, data: Any, na_value: Any, na_cmp: Any) -> None:
        ...

    def test_reindex(self, data: Any, na_value: Any) -> None:
        ...


class TestSetitem(base.BaseSetitemTests):
    ...


class TestMissing(base.BaseMissingTests):
    def test_fillna_limit_pad(self, data_missing: Any) -> None:
        ...

    def test_fillna_limit_backfill(self, data_missing: Any) -> None:
        ...


class TestReduce(base.BaseNoReduceTests):
    ...


class TestMethods(base.BaseMethodsTests):
    def test_value_counts(self, all_data: Any, dropna: Any) -> None:
        ...

    def test_combine_add(self, data_repeated: Any) -> None:
        ...

    def test_fillna_length_mismatch(self, data_missing: Any) -> None:
        ...

    def test_searchsorted(self, data_for_sorting: Any) -> None:  # type: ignore
        ...


class TestCasting(base.BaseCastingTests):
    ...


class TestArithmeticOps(base.BaseArithmeticOpsTests):
    def test_arith_series_with_scalar(self, data: Any, all_arithmetic_operators: Any) -> None:
        ...

    def test_add_series_with_extension_array(self, data: Any) -> None:
        ...

    def test_divmod_series_array(self) -> None:  # type: ignore
        ...


class TestComparisonOps(base.BaseComparisonOpsTests):
    ...

class TestParsing(base.BaseParsingTests):
    ...
