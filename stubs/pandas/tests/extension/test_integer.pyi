# Stubs for pandas.tests.extension.test_integer (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name,c-extension-no-member,too-many-ancestors

from typing import Any, Optional
from pandas.tests.extension import base

def make_data() -> Any:
    ...


def dtype(request: Any) -> Any:
    ...


def data(dtype: Any) -> Any:
    ...


def data_for_twos(dtype: Any) -> Any:
    ...


def data_missing(dtype: Any) -> Any:
    ...


def data_for_sorting(dtype: Any) -> Any:
    ...


def data_missing_for_sorting(dtype: Any) -> Any:
    ...


def na_cmp():
    ...


def na_value():
    ...


def data_for_grouping(dtype: Any) -> Any:
    ...



class TestDtype(base.BaseDtypeTests):
    def test_is_dtype_unboxes_dtype(self) -> None:  # type: ignore
        ...


class TestArithmeticOps(base.BaseArithmeticOpsTests):
    def check_opname(self, s: Any, op_name: Any, other: Any, exc: Optional[Any] = ...) -> None:
        ...


    def test_error(self, data: Any, all_arithmetic_operators: Any) -> None:
        ...


class TestComparisonOps(base.BaseComparisonOpsTests):
    def check_opname(self, s: Any, op_name: Any, other: Any, exc: Optional[Any] = ...) -> None:
        ...


class TestInterface(base.BaseInterfaceTests):
    ...


class TestConstructors(base.BaseConstructorsTests):
    ...


class TestReshaping(base.BaseReshapingTests):
    ...


class TestGetitem(base.BaseGetitemTests):
    ...


class TestSetitem(base.BaseSetitemTests):
    ...


class TestMissing(base.BaseMissingTests):
    ...


class TestMethods(base.BaseMethodsTests):
    def test_value_counts(self, all_data: Any, dropna: Any) -> None:
        ...


class TestCasting(base.BaseCastingTests):
    ...


class TestGroupby(base.BaseGroupbyTests):
    ...


class TestNumericReduce(base.BaseNumericReduceTests):
    ...


class TestBooleanReduce(base.BaseBooleanReduceTests):
    ...


class TestPrinting(base.BasePrintingTests):
    ...

class TestParsing(base.BaseParsingTests):
    ...
