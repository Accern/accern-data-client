# Stubs for pandas.tests.extension.test_interval (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name,c-extension-no-member,too-many-ancestors

from typing import Any
from pandas.tests.extension import base

def make_data():
    ...


def dtype():
    ...


def data():
    ...


def data_missing():
    ...


def data_for_sorting():
    ...


def data_missing_for_sorting():
    ...


def na_value():
    ...


def data_for_grouping():
    ...



class BaseInterval:
    ...


class TestDtype(BaseInterval, base.BaseDtypeTests):
    ...


class TestCasting(BaseInterval, base.BaseCastingTests):
    ...


class TestConstructors(BaseInterval, base.BaseConstructorsTests):
    ...


class TestGetitem(BaseInterval, base.BaseGetitemTests):
    ...


class TestGrouping(BaseInterval, base.BaseGroupbyTests):
    ...


class TestInterface(BaseInterval, base.BaseInterfaceTests):
    ...


class TestReduce(base.BaseNoReduceTests):
    ...


class TestMethods(BaseInterval, base.BaseMethodsTests):
    def test_combine_add(self, data_repeated: Any) -> None:
        ...

    def test_fillna_length_mismatch(self, data_missing: Any) -> None:
        ...



class TestMissing(BaseInterval, base.BaseMissingTests):
    unsupported_fill: Any = ...
    def test_fillna_limit_pad(self) -> None:  # type: ignore
        ...

    def test_fillna_series_method(self) -> None:  # type: ignore
        ...

    def test_fillna_limit_backfill(self) -> None:  # type: ignore
        ...

    def test_fillna_series(self) -> None:  # type: ignore
        ...

    def test_non_scalar_raises(self, data_missing: Any) -> None:
        ...


class TestReshaping(BaseInterval, base.BaseReshapingTests):
    ...


class TestSetitem(BaseInterval, base.BaseSetitemTests):
    ...



class TestPrinting(BaseInterval, base.BasePrintingTests):
    def test_array_repr(self, data: Any, size: Any) -> None:
        ...


class TestParsing(BaseInterval, base.BaseParsingTests):
    def test_EA_types(self, engine: Any, data: Any) -> None:
        ...
