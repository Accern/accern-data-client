# Stubs for pandas.tests.extension.base.dtype (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name,c-extension-no-member,import-error

from typing import Any
from .base import BaseExtensionTests

class BaseDtypeTests(BaseExtensionTests):
    def test_name(self, dtype: Any) -> None:
        ...

    def test_kind(self, dtype: Any) -> None:
        ...

    def test_construct_from_string_own_name(self, dtype: Any) -> None:
        ...

    def test_is_dtype_from_name(self, dtype: Any) -> None:
        ...

    def test_is_dtype_unboxes_dtype(self, data: Any, dtype: Any) -> None:
        ...

    def test_is_dtype_from_self(self, dtype: Any) -> None:
        ...

    def test_is_not_string_type(self, dtype: Any) -> None:
        ...

    def test_is_not_object_type(self, dtype: Any) -> None:
        ...

    def test_eq_with_str(self, dtype: Any) -> None:
        ...

    def test_eq_with_numpy_object(self, dtype: Any) -> None:
        ...

    def test_eq_with_self(self, dtype: Any) -> None:
        ...

    def test_array_type(self, data: Any, dtype: Any) -> None:
        ...

    def test_check_dtype(self, data: Any) -> None:
        ...

    def test_hashable(self, dtype: Any) -> None:
        ...

    def test_str(self, dtype: Any) -> None:
        ...

    def test_eq(self, dtype: Any) -> None:
        ...

    def test_construct_from_string(self, dtype: Any) -> None:
        ...
