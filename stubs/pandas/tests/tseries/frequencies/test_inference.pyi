# Stubs for pandas.tests.tseries.frequencies.test_inference (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level

from typing import Any

def base_delta_code_pair(request: Any) -> Any:
    ...


def count(request: Any) -> Any:
    ...


def day(request: Any) -> Any:
    ...


def month(request: Any) -> Any:
    ...


def periods(request: Any) -> Any:
    ...


def test_raise_if_period_index() -> None:
    ...


def test_raise_if_too_few() -> None:
    ...


def test_business_daily() -> None:
    ...


def test_business_daily_look_alike() -> None:
    ...


def test_day_corner() -> None:
    ...


def test_non_datetime_index() -> None:
    ...


def test_fifth_week_of_month_infer() -> None:
    ...


def test_week_of_month_fake() -> None:
    ...


def test_fifth_week_of_month() -> None:
    ...


def test_monthly_ambiguous() -> None:
    ...


def test_annual_ambiguous() -> None:
    ...


def test_infer_freq_delta(base_delta_code_pair: Any, count: Any) -> None:
    ...


def test_infer_freq_custom(base_delta_code_pair: Any, constructor: Any) -> None:
    ...


def test_weekly_infer(periods: Any, day: Any) -> None:
    ...


def test_week_of_month_infer(periods: Any, day: Any, count: Any) -> None:
    ...


def test_monthly_infer(periods: Any, freq: Any) -> None:
    ...


def test_quarterly_infer(month: Any, periods: Any) -> None:
    ...


def test_annually_infer(month: Any, periods: Any, annual: Any) -> None:
    ...


def test_infer_freq_index(freq: Any, expected: Any) -> None:
    ...


def test_infer_freq_tz(tz_naive_fixture: Any, expected: Any, dates: Any) -> None:
    ...


def test_infer_freq_tz_transition(tz_naive_fixture: Any, date_pair: Any, freq: Any) -> None:
    ...


def test_infer_freq_tz_transition_custom() -> None:
    ...


def test_infer_freq_business_hour(data: Any, expected: Any) -> None:
    ...


def test_not_monotonic() -> None:
    ...


def test_non_datetime_index2() -> None:
    ...


def test_invalid_index_types(idx: Any) -> None:
    ...


def test_invalid_index_types_unicode(idx: Any) -> None:
    ...


def test_string_datetime_like_compat() -> None:
    ...


def test_series() -> None:
    ...


def test_series_invalid_type(end: Any) -> None:
    ...


def test_series_inconvertible_string() -> None:
    ...


def test_series_period_index(freq: Any) -> None:
    ...


def test_series_datetime_index(freq: Any) -> None:
    ...


def test_legacy_offset_warnings(offset_func: Any, freq: Any) -> None:
    ...


def test_ms_vs_capital_ms() -> None:
    ...
