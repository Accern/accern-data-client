# Stubs for pandas.tests.generic.test_generic (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level

from typing import Any, Optional


class Generic:
    def test_rename(self) -> None:
        ...

    def test_get_numeric_data(self) -> None:
        ...

    def test_get_default(self) -> None:
        ...

    def test_nonzero(self) -> None:
        ...

    def test_downcast(self) -> None:
        ...

    def test_constructor_compound_dtypes(self):
        ...

    def check_metadata(self, x: Any, y: Optional[Any] = ...) -> None:
        ...

    def test_metadata_propagation(self) -> None:
        ...

    def test_head_tail(self) -> None:
        ...

    def test_sample(self) -> None:
        ...

    def test_size_compat(self) -> None:
        ...

    def test_split_compat(self) -> None:
        ...

    def test_unexpected_keyword(self) -> None:
        ...

    def test_stat_unexpected_keyword(self) -> None:
        ...

    def test_api_compat(self) -> None:
        ...

    def test_stat_non_defaults_args(self) -> None:
        ...

    def test_truncate_out_of_bounds(self) -> None:
        ...

    def test_validate_bool_args(self) -> None:
        ...

    def test_copy_and_deepcopy(self):
        ...

    def test_pct_change(
            self, periods: Any, fill_method: Any, limit: Any,
            exp: Any) -> None:
        ...


class TestNDFrame:
    def test_sample(self) -> None:
        ...

    def test_squeeze(self) -> None:
        ...

    def test_numpy_squeeze(self) -> None:
        ...

    def test_transpose(self) -> None:
        ...

    def test_numpy_transpose(self) -> None:
        ...

    def test_take(self) -> None:
        ...

    def test_take_invalid_kwargs(self) -> None:
        ...

    def test_equals(self) -> None:
        ...

    def test_pipe(self):
        ...

    def test_pipe_tuple(self):
        ...

    def test_pipe_tuple_error(self):
        ...

    def test_axis_classmethods(self, box: Any) -> None:
        ...

    def test_deprecated_to_dense(self) -> None:
        ...

    def test_deprecated_get_dtype_counts(self) -> None:
        ...
