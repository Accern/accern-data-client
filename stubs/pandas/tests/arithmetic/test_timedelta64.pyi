# Stubs for pandas.tests.arithmetic.test_timedelta64 (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name,c-extension-no-member,import-error
from typing import Any


def get_upcast_box(box: Any, vector: Any) -> Any:
    ...


class TestTimedelta64ArrayLikeComparisons:
    def test_compare_timedelta64_zerodim(self, box_with_array: Any) -> None:
        ...


class TestTimedelta64ArrayComparisons:
    def test_compare_timedelta_series(self) -> None:
        ...

    def test_tdi_cmp_str_invalid(self, box_with_array: Any) -> None:
        ...

    def test_comp_nat(self, dtype: Any) -> None:
        ...

    def test_comparisons_nat(self) -> None:
        ...

    def test_comparisons_coverage(self) -> None:
        ...


class TestTimedelta64ArithmeticUnsorted:
    def test_ufunc_coercions(self) -> None:
        ...

    def test_subtraction_ops(self) -> None:
        ...

    def test_subtraction_ops_with_tz(self) -> None:
        ...

    def test_dti_tdi_numeric_ops(self) -> None:
        ...

    def test_addition_ops(self) -> None:
        ...

    def test_timedelta(self, freq: Any) -> None:
        ...


class TestAddSubNaTMasking:
    def test_tdi_add_timestamp_nat_masking(self) -> None:
        ...

    def test_tdi_add_overflow(self) -> None:
        ...


class TestTimedeltaArraylikeAddSubOps:
    def test_td64_df_add_int_frame(self) -> None:
        ...

    def test_timedelta_ops_with_missing_values(self) -> None:
        ...

    def test_operators_timedelta64(self) -> None:
        ...

    def test_timedelta64_ops_nat(self) -> None:
        ...

    def test_td64arr_add_str_invalid(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_add_sub_float(
            self, box_with_array: Any, other: Any) -> None:
        ...

    def test_td64arr_sub_period(self, box_with_array: Any, freq: Any) -> None:
        ...

    def test_td64arr_sub_pi(
            self, box_with_array: Any, tdi_freq: Any, pi_freq: Any) -> None:
        ...

    def test_td64arr_sub_timestamp_raises(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_add_timestamp(
            self, box_with_array: Any, tz_naive_fixture: Any) -> None:
        ...

    def test_td64arr_add_sub_timestamp(self, box_with_array: Any) -> None:
        ...

    def test_tdi_sub_dt64_array(self, box_with_array: Any) -> None:
        ...

    def test_tdi_add_dt64_array(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_add_datetime64_nat(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_add_int_series_invalid(self, box: Any) -> None:
        ...

    def test_td64arr_add_intlike(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_add_sub_numeric_scalar_invalid(
            self, box_with_array: Any, scalar: Any) -> None:
        ...

    def test_td64arr_add_sub_numeric_arr_invalid(
            self, box: Any, vec: Any, dtype: Any) -> None:
        ...

    def test_operators_timedelta64_with_timedelta(
            self, scalar_td: Any) -> None:
        ...

    def test_timedelta64_operations_with_timedeltas(self) -> None:
        ...

    def test_td64arr_add_td64_array(self, box: Any) -> None:
        ...

    def test_td64arr_sub_td64_array(self, box: Any) -> None:
        ...

    def test_td64arr_add_sub_tdi(self, box: Any, names: Any) -> None:
        ...

    def test_td64arr_add_sub_td64_nat(self, box: Any) -> None:
        ...

    def test_td64arr_sub_NaT(self, box: Any) -> None:
        ...

    def test_td64arr_add_timedeltalike(self, two_hours: Any, box: Any) -> None:
        ...

    def test_td64arr_sub_timedeltalike(self, two_hours: Any, box: Any) -> None:
        ...

    def test_timedelta64_operations_with_DateOffset(self) -> None:
        ...

    def test_td64arr_add_offset_index(self, names: Any, box: Any) -> None:
        ...

    def test_td64arr_add_offset_array(self, box: Any) -> None:
        ...

    def test_td64arr_sub_offset_index(self, names: Any, box: Any) -> None:
        ...

    def test_td64arr_sub_offset_array(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_with_offset_series(
            self, names: Any, box_df_fail: Any) -> None:
        ...

    def test_td64arr_addsub_anchored_offset_arraylike(
            self, obox: Any, box_with_array: Any) -> None:
        ...


class TestTimedeltaArraylikeMulDivOps:
    def test_timedelta64_conversions(self, m: Any, unit: Any) -> None:
        ...

    def test_td64arr_mul_int(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_mul_tdlike_scalar_raises(
            self, two_hours: Any, box_with_array: Any) -> None:
        ...

    def test_tdi_mul_int_array_zerodim(self, box_with_array: Any) -> None:
        ...

    def test_tdi_mul_int_array(self, box_with_array: Any) -> None:
        ...

    def test_tdi_mul_int_series(self, box_with_array: Any) -> None:
        ...

    def test_tdi_mul_float_series(self, box_with_array: Any) -> None:
        ...

    def test_tdi_rmul_arraylike(self, other: Any, box_with_array: Any) -> None:
        ...

    def test_td64arr_div_nat_invalid(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_div_td64nat(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_div_int(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_div_tdlike_scalar(
            self, two_hours: Any, box_with_array: Any) -> None:
        ...

    def test_td64arr_div_tdlike_scalar_with_nat(
            self, two_hours: Any, box_with_array: Any) -> None:
        ...

    def test_td64arr_div_td64_ndarray(self, box_with_array: Any) -> None:
        ...

    def test_tdarr_div_length_mismatch(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_floordiv_tdscalar(
            self, box_with_array: Any, scalar_td: Any) -> None:
        ...

    def test_td64arr_rfloordiv_tdscalar(
            self, box_with_array: Any, scalar_td: Any) -> None:
        ...

    def test_td64arr_rfloordiv_tdscalar_explicit(
            self, box_with_array: Any, scalar_td: Any) -> None:
        ...

    def test_td64arr_floordiv_int(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_floordiv_tdlike_scalar(
            self, two_hours: Any, box_with_array: Any) -> None:
        ...

    def test_td64arr_rfloordiv_tdlike_scalar(
            self, scalar_td: Any, box_with_array: Any) -> None:
        ...

    def test_td64arr_mod_tdscalar(
            self, box_with_array: Any, three_days: Any) -> None:
        ...

    def test_td64arr_mod_int(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_rmod_tdscalar(
            self, box_with_array: Any, three_days: Any) -> None:
        ...

    def test_td64arr_mul_tdscalar_invalid(
            self, box_with_array: Any, scalar_td: Any) -> None:
        ...

    def test_td64arr_mul_too_short_raises(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_mul_td64arr_raises(self, box_with_array: Any) -> None:
        ...

    def test_td64arr_mul_numeric_scalar(
            self, box_with_array: Any, one: Any) -> None:
        ...

    def test_td64arr_div_numeric_scalar(
            self, box_with_array: Any, two: Any) -> None:
        ...

    def test_td64arr_rmul_numeric_array(
            self, box_with_array: Any, vector: Any, dtype: Any) -> None:
        ...

    def test_td64arr_div_numeric_array(
            self, box_with_array: Any, vector: Any, dtype: Any) -> None:
        ...

    def test_td64arr_mul_int_series(self, box_df_fail: Any, names: Any) -> None:
        ...

    def test_float_series_rdiv_td64arr(
            self, box_with_array: Any, names: Any) -> None:
        ...


class TestTimedeltaArraylikeInvalidArithmeticOps:
    def test_td64arr_pow_invalid(
            self, scalar_td: Any, box_with_array: Any) -> None:
        ...
