# Stubs for pandas.tests.io.parser.test_parse_dates (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from typing import Any

date_strategy: Any

def test_separator_date_conflict(all_parsers: Any) -> None:
    ...


def test_multiple_date_col_custom(all_parsers: Any, keep_date_col: Any) -> None:
    ...


def test_concat_date_col_fail(container: Any, dim: Any) -> None:
    ...


def test_multiple_date_col(all_parsers: Any, keep_date_col: Any) -> None:
    ...


def test_date_col_as_index_col(all_parsers: Any) -> None:
    ...


def test_multiple_date_cols_int_cast(all_parsers: Any) -> None:
    ...


def test_multiple_date_col_timestamp_parse(all_parsers: Any) -> None:
    ...


def test_multiple_date_cols_with_header(all_parsers: Any) -> None:
    ...


def test_multiple_date_col_name_collision(all_parsers: Any, data: Any, parse_dates: Any, msg: Any) -> None:
    ...


def test_date_parser_int_bug(all_parsers: Any) -> None:
    ...


def test_nat_parse(all_parsers: Any) -> None:
    ...


def test_csv_custom_parser(all_parsers: Any) -> None:
    ...


def test_parse_dates_implicit_first_col(all_parsers: Any) -> None:
    ...


def test_parse_dates_string(all_parsers: Any) -> None:
    ...


def test_yy_format_with_year_first(all_parsers: Any, parse_dates: Any) -> None:
    ...


def test_parse_dates_column_list(all_parsers: Any, parse_dates: Any) -> None:
    ...


def test_multi_index_parse_dates(all_parsers: Any, index_col: Any) -> None:
    ...


def test_parse_dates_custom_euro_format(all_parsers: Any, kwargs: Any) -> None:
    ...


def test_parse_tz_aware(all_parsers: Any) -> None:
    ...


def test_multiple_date_cols_index(all_parsers: Any, parse_dates: Any, index_col: Any) -> None:
    ...


def test_multiple_date_cols_chunked(all_parsers: Any) -> None:
    ...


def test_multiple_date_col_named_index_compat(all_parsers: Any) -> None:
    ...


def test_multiple_date_col_multiple_index_compat(all_parsers: Any) -> None:
    ...


def test_read_with_parse_dates_scalar_non_bool(all_parsers: Any, kwargs: Any) -> None:
    ...


def test_read_with_parse_dates_invalid_type(all_parsers: Any, parse_dates: Any) -> None:
    ...


def test_bad_date_parse(all_parsers: Any, cache_dates: Any, value: Any) -> None:
    ...


def test_parse_dates_empty_string(all_parsers: Any) -> None:
    ...


def test_parse_dates_no_convert_thousands(all_parsers: Any, data: Any, kwargs: Any, expected: Any) -> None:
    ...


def test_parse_date_time_multi_level_column_name(all_parsers: Any) -> None:
    ...


def test_parse_date_time(all_parsers: Any, data: Any, kwargs: Any, expected: Any) -> None:
    ...


def test_parse_date_fields(all_parsers: Any) -> None:
    ...


def test_parse_date_all_fields(all_parsers: Any) -> None:
    ...


def test_datetime_fractional_seconds(all_parsers: Any) -> None:
    ...


def test_generic(all_parsers: Any) -> None:
    ...


def test_date_parser_resolution_if_not_ns(all_parsers: Any) -> None:
    ...


def test_parse_date_column_with_empty_string(all_parsers: Any) -> None:
    ...


def test_parse_date_float(all_parsers: Any, data: Any, expected: Any, parse_dates: Any) -> None:
    ...


def test_parse_timezone(all_parsers: Any) -> None:
    ...


def test_invalid_parse_delimited_date(all_parsers: Any, date_string: Any) -> None:
    ...


def test_parse_delimited_date_swap(all_parsers: Any, date_string: Any, dayfirst: Any, expected: Any) -> None:
    ...


def test_hypothesis_delimited_date(date_format: Any, dayfirst: Any, delimiter: Any, test_datetime: Any) -> None:
    ...
