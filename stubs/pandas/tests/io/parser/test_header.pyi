# Stubs for pandas.tests.io.parser.test_header (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from collections import namedtuple
from typing import Any

def test_read_with_bad_header(all_parsers: Any) -> None:
    ...


def test_bool_header_arg(all_parsers: Any, header: Any) -> None:
    ...


def test_no_header_prefix(all_parsers: Any) -> None:
    ...


def test_header_with_index_col(all_parsers: Any) -> None:
    ...


def test_header_not_first_line(all_parsers: Any) -> None:
    ...


def test_header_multi_index(all_parsers: Any) -> None:
    ...


def test_header_multi_index_invalid(all_parsers: Any, kwargs: Any, msg: Any) -> None:
    ...



_TestTuple = namedtuple('names', ['first', 'second'])

def test_header_multi_index_common_format1(all_parsers: Any, kwargs: Any) -> None:
    ...


def test_header_multi_index_common_format2(all_parsers: Any, kwargs: Any) -> None:
    ...


def test_header_multi_index_common_format3(all_parsers: Any, kwargs: Any) -> None:
    ...


def test_header_multi_index_common_format_malformed1(all_parsers: Any) -> None:
    ...


def test_header_multi_index_common_format_malformed2(all_parsers: Any) -> None:
    ...


def test_header_multi_index_common_format_malformed3(all_parsers: Any) -> None:
    ...


def test_header_names_backward_compat(all_parsers: Any, data: Any, header: Any) -> None:
    ...


def test_read_only_header_no_rows(all_parsers: Any, kwargs: Any) -> None:
    ...


def test_no_header(all_parsers: Any, kwargs: Any, names: Any) -> None:
    ...


def test_non_int_header(all_parsers: Any, header: Any) -> None:
    ...


def test_singleton_header(all_parsers: Any) -> None:
    ...


def test_mangles_multi_index(all_parsers: Any, data: Any, expected: Any) -> None:
    ...


def test_multi_index_unnamed(all_parsers: Any, index_col: Any, columns: Any) -> None:
    ...
