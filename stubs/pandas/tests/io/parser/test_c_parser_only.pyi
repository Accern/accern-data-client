# Stubs for pandas.tests.io.parser.test_c_parser_only (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from typing import Any

def test_buffer_overflow(c_parser_only: Any, malformed: Any) -> None:
    ...


def test_buffer_rd_bytes(c_parser_only: Any) -> None:
    ...


def test_delim_whitespace_custom_terminator(c_parser_only: Any) -> None:
    ...


def test_dtype_and_names_error(c_parser_only: Any) -> None:
    ...


def test_unsupported_dtype(c_parser_only: Any, match: Any, kwargs: Any) -> None:
    ...


def test_precise_conversion(c_parser_only: Any) -> None:
    ...


def test_usecols_dtypes(c_parser_only: Any) -> None:
    ...


def test_disable_bool_parsing(c_parser_only: Any) -> None:
    ...


def test_custom_lineterminator(c_parser_only: Any) -> None:
    ...


def test_parse_ragged_csv(c_parser_only: Any) -> None:
    ...


def test_tokenize_CR_with_quoting(c_parser_only: Any) -> None:
    ...


def test_grow_boundary_at_cap(c_parser_only: Any) -> None:
    ...


def test_parse_trim_buffers(c_parser_only: Any) -> None:
    ...


def test_internal_null_byte(c_parser_only: Any) -> None:
    ...


def test_read_nrows_large(c_parser_only: Any) -> None:
    ...


def test_float_precision_round_trip_with_text(c_parser_only: Any) -> None:
    ...


def test_large_difference_in_columns(c_parser_only: Any) -> None:
    ...


def test_data_after_quote(c_parser_only: Any) -> None:
    ...


def test_comment_whitespace_delimited(c_parser_only: Any, capsys: Any) -> None:
    ...


def test_file_like_no_next(c_parser_only: Any) -> None:
    ...


def test_buffer_rd_bytes_bad_unicode(c_parser_only: Any) -> None:
    ...


def test_read_tarfile(c_parser_only: Any, csv_dir_path: Any, tar_suffix: Any) -> None:
    ...


def test_bytes_exceed_2gb(c_parser_only: Any) -> None:
    ...


def test_chunk_whitespace_on_boundary(c_parser_only: Any) -> None:
    ...


def test_file_handles_mmap(c_parser_only: Any, csv1: Any) -> None:
    ...


def test_file_binary_mode(c_parser_only: Any) -> None:
    ...
