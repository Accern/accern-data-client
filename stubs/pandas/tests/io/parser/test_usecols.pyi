# Stubs for pandas.tests.io.parser.test_usecols (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from typing import Any

def test_raise_on_mixed_dtype_usecols(all_parsers: Any) -> None:
    ...


def test_usecols(all_parsers: Any, usecols: Any) -> None:
    ...


def test_usecols_with_names(all_parsers: Any) -> None:
    ...


def test_usecols_relative_to_names(all_parsers: Any, names: Any, usecols: Any) -> None:
    ...


def test_usecols_relative_to_names2(all_parsers: Any) -> None:
    ...


def test_usecols_name_length_conflict(all_parsers: Any) -> None:
    ...


def test_usecols_single_string(all_parsers: Any) -> None:
    ...


def test_usecols_index_col_false(all_parsers: Any, data: Any) -> None:
    ...


def test_usecols_index_col_conflict(all_parsers: Any, usecols: Any, index_col: Any) -> None:
    ...


def test_usecols_index_col_conflict2(all_parsers: Any) -> None:
    ...


def test_usecols_implicit_index_col(all_parsers: Any) -> None:
    ...


def test_usecols_regex_sep(all_parsers: Any) -> None:
    ...


def test_usecols_with_whitespace(all_parsers: Any) -> None:
    ...


def test_usecols_with_integer_like_header(all_parsers: Any, usecols: Any, expected: Any) -> None:
    ...


def test_usecols_with_parse_dates(all_parsers: Any, usecols: Any) -> None:
    ...


def test_usecols_with_parse_dates2(all_parsers: Any) -> None:
    ...


def test_usecols_with_parse_dates3(all_parsers: Any) -> None:
    ...


def test_usecols_with_parse_dates4(all_parsers: Any) -> None:
    ...


def test_usecols_with_parse_dates_and_names(all_parsers: Any, usecols: Any, names: Any) -> None:
    ...


def test_usecols_with_unicode_strings(all_parsers: Any) -> None:
    ...


def test_usecols_with_single_byte_unicode_strings(all_parsers: Any) -> None:
    ...


def test_usecols_with_mixed_encoding_strings(all_parsers: Any, usecols: Any) -> None:
    ...


def test_usecols_with_multi_byte_characters(all_parsers: Any, usecols: Any) -> None:
    ...


def test_empty_usecols(all_parsers: Any) -> None:
    ...


def test_np_array_usecols(all_parsers: Any) -> None:
    ...


def test_callable_usecols(all_parsers: Any, usecols: Any, expected: Any) -> None:
    ...


def test_incomplete_first_row(all_parsers: Any, usecols: Any) -> None:
    ...


def test_uneven_length_cols(all_parsers: Any, data: Any, usecols: Any, kwargs: Any, expected: Any) -> None:
    ...


def test_raises_on_usecols_names_mismatch(all_parsers: Any, usecols: Any, kwargs: Any, expected: Any, msg: Any) -> None:
    ...


def test_usecols_subset_names_mismatch_orig_columns(all_parsers: Any, usecols: Any) -> None:
    ...
