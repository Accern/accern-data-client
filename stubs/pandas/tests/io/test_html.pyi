# Stubs for pandas.tests.io.test_html (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from typing import Any

HERE: Any

def html_encoding_file(request: Any, datapath: Any) -> Any:
    ...

def assert_framelist_equal(list1: Any, list2: Any, *args: Any, **kwargs: Any) -> None:
    ...

def test_bs4_version_fails(monkeypatch: Any, datapath: Any) -> None:
    ...

def test_invalid_flavor() -> None:
    ...

def test_same_ordering(datapath: Any) -> None:
    ...


class TestReadHtml:
    spam_data: Any = ...
    spam_data_kwargs: Any = ...
    banklist_data: Any = ...
    def set_files(self, datapath: Any) -> None:
        ...

    read_html: Any = ...
    def set_defaults(self, flavor: Any, request: Any) -> None:
        ...

    def test_to_html_compat(self):
        ...

    def test_banklist_url(self) -> None:
        ...

    def test_spam_url(self) -> None:
        ...

    def test_banklist(self) -> None:
        ...

    def test_spam(self) -> None:
        ...

    def test_spam_no_match(self) -> None:
        ...

    def test_banklist_no_match(self) -> None:
        ...

    def test_spam_header(self) -> None:
        ...

    def test_skiprows_int(self) -> None:
        ...

    def test_skiprows_xrange(self) -> None:
        ...

    def test_skiprows_list(self) -> None:
        ...

    def test_skiprows_set(self) -> None:
        ...

    def test_skiprows_slice(self) -> None:
        ...

    def test_skiprows_slice_short(self) -> None:
        ...

    def test_skiprows_slice_long(self) -> None:
        ...

    def test_skiprows_ndarray(self) -> None:
        ...

    def test_skiprows_invalid(self) -> None:
        ...

    def test_index(self) -> None:
        ...

    def test_header_and_index_no_types(self) -> None:
        ...

    def test_header_and_index_with_types(self) -> None:
        ...

    def test_infer_types(self) -> None:
        ...

    def test_string_io(self) -> None:
        ...

    def test_string(self) -> None:
        ...

    def test_file_like(self) -> None:
        ...

    def test_bad_url_protocol(self) -> None:
        ...

    def test_invalid_url(self) -> None:
        ...

    def test_file_url(self) -> None:
        ...

    def test_invalid_table_attrs(self) -> None:
        ...

    def test_multiindex_header(self) -> None:
        ...

    def test_multiindex_index(self) -> None:
        ...

    def test_multiindex_header_index(self) -> None:
        ...

    def test_multiindex_header_skiprows_tuples(self) -> None:
        ...

    def test_multiindex_header_skiprows(self) -> None:
        ...

    def test_multiindex_header_index_skiprows(self) -> None:
        ...

    def test_regex_idempotency(self) -> None:
        ...

    def test_negative_skiprows(self) -> None:
        ...

    def test_multiple_matches(self) -> None:
        ...

    def test_python_docs_table(self) -> None:
        ...

    def test_thousands_macau_stats(self, datapath: Any) -> None:
        ...

    def test_thousands_macau_index_col(self, datapath: Any) -> None:
        ...

    def test_empty_tables(self) -> None:
        ...

    def test_multiple_tbody(self) -> None:
        ...

    def test_header_and_one_column(self) -> None:
        ...

    def test_thead_without_tr(self) -> None:
        ...

    def test_tfoot_read(self) -> None:
        ...

    def test_parse_header_of_non_string_column(self) -> None:
        ...

    def test_nyse_wsj_commas_table(self, datapath: Any) -> None:
        ...

    def test_banklist_header(self, datapath: Any) -> None:
        ...

    def test_gold_canyon(self) -> None:
        ...

    def test_different_number_of_cols(self) -> None:
        ...

    def test_colspan_rowspan_1(self) -> None:
        ...

    def test_colspan_rowspan_copy_values(self) -> None:
        ...

    def test_colspan_rowspan_both_not_1(self) -> None:
        ...

    def test_rowspan_at_end_of_row(self) -> None:
        ...

    def test_rowspan_only_rows(self) -> None:
        ...

    def test_header_inferred_from_rows_with_only_th(self) -> None:
        ...

    def test_parse_dates_list(self) -> None:
        ...

    def test_parse_dates_combine(self):
        ...

    def test_computer_sales_page(self, datapath: Any) -> None:
        ...

    def test_wikipedia_states_table(self, datapath: Any) -> None:
        ...

    def test_parser_error_on_empty_header_row(self) -> None:
        ...

    def test_decimal_rows(self) -> None:
        ...

    def test_bool_header_arg(self) -> None:
        ...

    def test_converters(self) -> None:
        ...

    def test_na_values(self) -> None:
        ...

    def test_keep_default_na(self) -> None:
        ...

    def test_preserve_empty_rows(self) -> None:
        ...

    def test_ignore_empty_rows_when_inferring_header(self) -> None:
        ...

    def test_multiple_header_rows(self) -> None:
        ...

    def test_works_on_valid_markup(self, datapath: Any) -> None:
        ...

    def test_fallback_success(self, datapath: Any) -> None:
        ...

    def test_to_html_timestamp(self) -> None:
        ...

    def test_displayed_only(self, displayed_only: Any, exp0: Any, exp1: Any) -> None:
        ...

    def test_encode(self, html_encoding_file: Any) -> None:
        ...

    def test_parse_failure_unseekable(self) -> None:
        ...

    data: Any = ...
    at_end: bool = ...
    def test_parse_failure_rewinds(self) -> None:
        ...

    err: Any = ...
    def test_importcheck_thread_safety(self, datapath: Any) -> None:
        ...
