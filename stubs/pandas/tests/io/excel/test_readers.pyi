# Stubs for pandas.tests.io.excel.test_readers (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name,c-extension-no-member,too-many-ancestors

from typing import Any

def ignore_xlrd_time_clock_warning() -> None:
    ...

def engine(request: Any) -> Any:
    ...


class TestReaders:
    def cd_and_set_engine(self, engine: Any, datapath: Any, monkeypatch: Any, read_ext: Any) -> None:
        ...

    def test_usecols_int(self, read_ext: Any, df_ref: Any) -> None:
        ...

    def test_usecols_list(self, read_ext: Any, df_ref: Any) -> None:
        ...

    def test_usecols_str(self, read_ext: Any, df_ref: Any) -> None:
        ...

    def test_usecols_diff_positional_int_columns_order(self, read_ext: Any, usecols: Any, df_ref: Any) -> None:
        ...

    def test_usecols_diff_positional_str_columns_order(self, read_ext: Any, usecols: Any, df_ref: Any) -> None:
        ...

    def test_read_excel_without_slicing(self, read_ext: Any, df_ref: Any) -> None:
        ...

    def test_usecols_excel_range_str(self, read_ext: Any, df_ref: Any) -> None:
        ...

    def test_usecols_excel_range_str_invalid(self, read_ext: Any) -> None:
        ...

    def test_index_col_label_error(self, read_ext: Any) -> None:
        ...

    def test_index_col_empty(self, read_ext: Any) -> None:
        ...

    def test_index_col_with_unnamed(self, read_ext: Any, index_col: Any) -> None:
        ...

    def test_usecols_pass_non_existent_column(self, read_ext: Any) -> None:
        ...

    def test_usecols_wrong_type(self, read_ext: Any) -> None:
        ...

    def test_excel_stop_iterator(self, read_ext: Any) -> None:
        ...

    def test_excel_cell_error_na(self, read_ext: Any) -> None:
        ...

    def test_excel_table(self, read_ext: Any, df_ref: Any) -> None:
        ...

    def test_reader_special_dtypes(self, read_ext: Any) -> None:
        ...

    def test_reader_converters(self, read_ext: Any) -> None:
        ...

    def test_reader_dtype(self, read_ext: Any) -> None:
        ...

    def test_reader_dtype_str(self, read_ext: Any, dtype: Any, expected: Any) -> None:
        ...

    def test_reading_all_sheets(self, read_ext: Any) -> None:
        ...

    def test_reading_multiple_specific_sheets(self, read_ext: Any) -> None:
        ...

    def test_reading_all_sheets_with_blank(self, read_ext: Any) -> None:
        ...

    def test_read_excel_blank(self, read_ext: Any) -> None:
        ...

    def test_read_excel_blank_with_header(self, read_ext: Any) -> None:
        ...

    def test_date_conversion_overflow(self, read_ext: Any) -> None:
        ...

    def test_sheet_name(self, read_ext: Any, df_ref: Any) -> None:
        ...

    def test_excel_read_buffer(self, read_ext: Any) -> None:
        ...

    def test_bad_engine_raises(self, read_ext: Any) -> None:
        ...

    def test_read_from_http_url(self, read_ext: Any) -> None:
        ...

    def test_read_from_s3_url(self, read_ext: Any, s3_resource: Any) -> None:
        ...

    def test_read_from_file_url(self, read_ext: Any, datapath: Any) -> None:
        ...

    def test_read_from_pathlib_path(self, read_ext: Any) -> None:
        ...

    def test_read_from_py_localpath(self, read_ext: Any) -> None:
        ...

    def test_reader_seconds(self, read_ext: Any) -> None:
        ...

    def test_read_excel_multiindex(self, read_ext: Any) -> None:
        ...

    def test_read_excel_multiindex_header_only(self, read_ext: Any) -> None:
        ...

    def test_excel_old_index_format(self, read_ext: Any) -> None:
        ...

    def test_read_excel_bool_header_arg(self, read_ext: Any) -> None:
        ...

    def test_read_excel_chunksize(self, read_ext: Any) -> None:
        ...

    def test_read_excel_skiprows_list(self, read_ext: Any) -> None:
        ...

    def test_read_excel_nrows(self, read_ext: Any) -> None:
        ...

    def test_read_excel_nrows_greater_than_nrows_in_file(self, read_ext: Any) -> None:
        ...

    def test_read_excel_nrows_non_integer_parameter(self, read_ext: Any) -> None:
        ...

    def test_read_excel_squeeze(self, read_ext: Any) -> None:
        ...


class TestExcelFileRead:
    def cd_and_set_engine(self, engine: Any, datapath: Any, monkeypatch: Any, read_ext: Any) -> None:
        ...

    def test_excel_passes_na(self, read_ext: Any) -> None:
        ...

    def test_unexpected_kwargs_raises(self, read_ext: Any, arg: Any) -> None:
        ...

    def test_excel_table_sheet_by_index(self, read_ext: Any, df_ref: Any) -> None:
        ...

    def test_sheet_name(self, read_ext: Any, df_ref: Any) -> None:
        ...

    def test_excel_read_buffer(self, engine: Any, read_ext: Any) -> None:
        ...

    def test_reader_closes_file(self, engine: Any, read_ext: Any) -> None:
        ...

    def test_conflicting_excel_engines(self, read_ext: Any) -> None:
        ...
