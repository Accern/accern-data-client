# Stubs for pandas.tests.indexing.test_coercion (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=blacklisted-name

from typing import Any

def check_comprehensiveness(request: Any) -> None:
    ...


class CoercionBase:
    klasses: Any = ...
    dtypes: Any = ...
    @property
    def method(self) -> None:
        ...


class TestSetitemCoercion(CoercionBase):
    def test_setitem_series_object(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_series_int64(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_series_int8(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_series_float64(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_series_complex128(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_series_bool(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_series_datetime64(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_series_datetime64tz(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_series_timedelta64(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_index_object(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_index_int64(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_index_float64(self, val: Any, exp_dtype: Any) -> None:
        ...

    def test_setitem_series_period(self) -> None:
        ...

    def test_setitem_index_complex128(self) -> None:
        ...

    def test_setitem_index_bool(self) -> None:
        ...

    def test_setitem_index_datetime64(self) -> None:
        ...

    def test_setitem_index_datetime64tz(self) -> None:
        ...

    def test_setitem_index_timedelta64(self) -> None:
        ...

    def test_setitem_index_period(self) -> None:
        ...


class TestInsertIndexCoercion(CoercionBase):
    klasses: Any = ...
    def test_insert_index_object(self, insert: Any, coerced_val: Any, coerced_dtype: Any) -> None:
        ...

    def test_insert_index_int64(self, insert: Any, coerced_val: Any, coerced_dtype: Any) -> None:
        ...

    def test_insert_index_float64(self, insert: Any, coerced_val: Any, coerced_dtype: Any) -> None:
        ...

    def test_insert_index_datetimes(self, fill_val: Any, exp_dtype: Any) -> None:
        ...

    def test_insert_index_timedelta64(self) -> None:
        ...

    def test_insert_index_period(self, insert: Any, coerced_val: Any, coerced_dtype: Any) -> None:
        ...

    def test_insert_index_complex128(self) -> None:
        ...

    def test_insert_index_bool(self) -> None:
        ...


class TestWhereCoercion(CoercionBase):
    def test_where_object(self, klass: Any, fill_val: Any, exp_dtype: Any) -> None:
        ...

    def test_where_int64(self, klass: Any, fill_val: Any, exp_dtype: Any) -> None:
        ...

    def test_where_float64(self, klass: Any, fill_val: Any, exp_dtype: Any) -> None:
        ...

    def test_where_series_complex128(self, fill_val: Any, exp_dtype: Any) -> None:
        ...

    def test_where_series_bool(self, fill_val: Any, exp_dtype: Any) -> None:
        ...

    def test_where_series_datetime64(self, fill_val: Any, exp_dtype: Any) -> None:
        ...

    def test_where_index_datetime(self) -> None:
        ...

    def test_where_index_datetimetz(self) -> None:
        ...

    def test_where_index_complex128(self) -> None:
        ...

    def test_where_index_bool(self) -> None:
        ...

    def test_where_series_datetime64tz(self) -> None:
        ...

    def test_where_series_timedelta64(self) -> None:
        ...

    def test_where_series_period(self) -> None:
        ...

    def test_where_index_datetime64tz(self) -> None:
        ...

    def test_where_index_timedelta64(self) -> None:
        ...

    def test_where_index_period(self) -> None:
        ...


class TestFillnaSeriesCoercion(CoercionBase):
    def test_has_comprehensive_tests(self) -> None:
        ...

    def test_fillna_object(self, klass: Any, fill_val: Any, fill_dtype: Any) -> None:
        ...

    def test_fillna_float64(self, klass: Any, fill_val: Any, fill_dtype: Any) -> None:
        ...

    def test_fillna_series_complex128(self, fill_val: Any, fill_dtype: Any) -> None:
        ...

    def test_fillna_datetime(self, klass: Any, fill_val: Any, fill_dtype: Any) -> None:
        ...

    def test_fillna_datetime64tz(self, klass: Any, fill_val: Any, fill_dtype: Any) -> None:
        ...

    def test_fillna_series_int64(self) -> None:
        ...

    def test_fillna_index_int64(self) -> None:
        ...

    def test_fillna_series_bool(self) -> None:
        ...

    def test_fillna_index_bool(self) -> None:
        ...

    def test_fillna_series_timedelta64(self) -> None:
        ...

    def test_fillna_series_period(self) -> None:
        ...

    def test_fillna_index_timedelta64(self) -> None:
        ...

    def test_fillna_index_period(self) -> None:
        ...


class TestReplaceSeriesCoercion(CoercionBase):
    klasses: Any = ...
    rep: Any = ...
    key: Any = ...
    def test_replace_series(self, how: Any, to_key: Any, from_key: Any) -> None:
        ...

    def test_replace_series_datetime_tz(self) -> None:
        ...

    def test_replace_series_datetime_datetime(self) -> None:
        ...

    def test_replace_series_period(self) -> None:
        ...
