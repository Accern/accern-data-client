# Stubs for pandas.tests.dtypes.test_inference (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name,c-extension-no-member,import-error


from typing import Any

def coerce(request: Any) -> Any:
    ...


ll_params: Any
objs: Any
expected: Any
ids: Any


def maybe_list_like(request: Any) -> Any:
    ...


def test_is_list_like(maybe_list_like: Any) -> None:
    ...


def test_is_list_like_disallow_sets(maybe_list_like: Any) -> None:
    ...


def test_is_sequence():
    ...


def test_is_array_like() -> None:
    ...


def test_is_nested_list_like_passes(inner: Any, outer: Any) -> None:
    ...


def test_is_nested_list_like_fails(obj: Any) -> None:
    ...


def test_is_dict_like_passes(ll: Any) -> None:
    ...


def test_is_dict_like_fails(ll: Any) -> None:
    ...


def test_is_dict_like_duck_type(has_keys: Any, has_getitem: Any,
                                has_contains: Any) -> None:
    ...


def test_is_file_like():
    ...


def test_is_names_tuple_passes(ll: Any) -> None:
    ...


def test_is_names_tuple_fails(ll: Any) -> None:
    ...


def test_is_hashable() -> None:
    ...


def test_is_re_passes(ll: Any) -> None:
    ...


def test_is_re_fails(ll: Any) -> None:
    ...


def test_is_recompilable_passes(ll: Any) -> None:
    ...


def test_is_recompilable_fails(ll: Any) -> None:
    ...


class TestInference:
    def test_infer_dtype_bytes(self) -> None:
        ...

    def test_isinf_scalar(self) -> None:
        ...

    def test_maybe_convert_numeric_infinities(self) -> None:
        ...

    def test_maybe_convert_numeric_post_floatify_nan(self, coerce: Any) -> None:
        ...

    def test_convert_infs(self) -> None:
        ...

    def test_scientific_no_exponent(self) -> None:
        ...

    def test_convert_non_hashable(self) -> None:
        ...

    def test_convert_numeric_uint64(self) -> None:
        ...

    def test_convert_numeric_uint64_nan(self, coerce: Any, arr: Any) -> None:
        ...

    def test_convert_numeric_uint64_nan_values(self, coerce: Any) -> None:
        ...

    def test_convert_numeric_int64_uint64(self, case: Any, coerce: Any) -> None:
        ...

    def test_convert_int_overflow(self, value: Any) -> None:
        ...

    def test_maybe_convert_objects_uint64(self) -> None:
        ...

    def test_mixed_dtypes_remain_object_array(self) -> None:
        ...


class TestTypeInference:
    class Dummy:
        ...

    def test_inferred_dtype_fixture(self, any_skipna_inferred_dtype: Any) -> None:
        ...

    def test_length_zero(self, skipna: Any) -> None:
        ...

    def test_integers(self) -> None:
        ...

    def test_deprecation(self) -> None:
        ...

    def test_bools(self) -> None:
        ...

    def test_floats(self) -> None:
        ...

    def test_decimals(self) -> None:
        ...

    def test_complex(self, skipna: Any) -> None:
        ...

    def test_string(self) -> None:
        ...

    def test_unicode(self) -> None:
        ...

    def test_object_empty(self, box: Any, missing: Any, dtype: Any,
                          skipna: Any, expected: Any) -> None:
        ...

    def test_datetime(self) -> None:
        ...

    def test_infer_dtype_datetime(self) -> None:
        ...

    def test_infer_dtype_timedelta(self) -> None:
        ...

    def test_infer_dtype_period(self) -> None:
        ...

    def test_infer_datetimelike_array_datetime(self, data: Any) -> None:
        ...

    def test_infer_datetimelike_array_timedelta(self, data: Any) -> None:
        ...

    def test_infer_datetimelike_array_date(self) -> None:
        ...

    def test_infer_datetimelike_array_mixed(self, data: Any) -> None:
        ...

    def test_infer_datetimelike_array_nan_nat_like(
            self, first: Any, second: Any, expected: Any) -> None:
        ...

    def test_infer_dtype_all_nan_nat_like(self) -> None:
        ...

    def test_is_datetimelike_array_all_nan_nat_like(self) -> None:
        ...

    def test_other_dtypes_for_array(self, func: Any) -> None:
        ...

    def test_date(self) -> None:
        ...

    def test_is_numeric_array(self) -> None:
        ...

    def test_is_string_array(self) -> None:
        ...

    def test_to_object_array_tuples(self) -> None:
        ...

    def test_object(self) -> None:
        ...

    def test_to_object_array_width(self) -> None:
        ...

    def test_is_period(self) -> None:
        ...

    def test_categorical(self) -> None:
        ...


class TestNumberScalar:
    def test_is_number(self) -> None:
        ...

    def test_is_bool(self) -> None:
        ...

    def test_is_integer(self) -> None:
        ...

    def test_is_float(self) -> None:
        ...

    def test_is_datetime_dtypes(self) -> None:
        ...

    def test_is_timedelta(self) -> None:
        ...


class TestIsScalar:
    def test_is_scalar_builtin_scalars(self) -> None:
        ...

    def test_is_scalar_builtin_nonscalars(self) -> None:
        ...

    def test_is_scalar_numpy_array_scalars(self) -> None:
        ...

    def test_is_scalar_numpy_zerodim_arrays(self) -> None:
        ...

    def test_is_scalar_numpy_arrays(self) -> None:
        ...

    def test_is_scalar_pandas_scalars(self) -> None:
        ...

    def test_is_scalar_pandas_containers(self) -> None:
        ...


def test_datetimeindex_from_empty_datetime64_array() -> None:
    ...


def test_nan_to_nat_conversions() -> None:
    ...


def test_is_scipy_sparse(spmatrix: Any) -> None:
    ...


def test_ensure_int32() -> None:
    ...


def test_ensure_categorical() -> None:
    ...
