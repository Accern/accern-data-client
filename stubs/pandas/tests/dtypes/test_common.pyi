# Stubs for pandas.tests.dtypes.test_common (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,no-self-use,redefined-outer-name


from typing import Any

ignore_sparse_warning: Any


def to_ea_dtypes(dtypes: Any) -> Any:
    ...


def to_numpy_dtypes(dtypes: Any) -> Any:
    ...



class TestPandasDtype:
    def test_invalid_dtype_error(self, box: Any) -> None:
        ...

    def test_pandas_dtype_valid(self, dtype: Any) -> None:
        ...

    def test_numpy_dtype(self, dtype: Any) -> None:
        ...

    def test_numpy_string_dtype(self) -> None:
        ...

    def test_datetimetz_dtype(self, dtype: Any) -> None:
        ...

    def test_categorical_dtype(self) -> None:
        ...

    def test_period_dtype(self, dtype: Any) -> None:
        ...



dtypes: Any

def test_dtype_equal(name1: Any, dtype1: Any, name2: Any, dtype2: Any) -> None:
    ...


def test_dtype_equal_strict(dtype1: Any, dtype2: Any) -> None:
    ...


def get_is_dtype_funcs() -> Any:
    ...


def test_get_dtype_error_catch(func: Any) -> None:
    ...


def test_is_object() -> None:
    ...


def test_is_sparse(check_scipy: Any) -> None:
    ...


def test_is_scipy_sparse() -> None:
    ...


def test_is_categorical() -> None:
    ...


def test_is_datetimetz() -> None:
    ...


def test_is_period_deprecated() -> None:
    ...


def test_is_datetime64_dtype() -> None:
    ...


def test_is_datetime64tz_dtype() -> None:
    ...


def test_is_timedelta64_dtype() -> None:
    ...


def test_is_period_dtype() -> None:
    ...


def test_is_interval_dtype() -> None:
    ...


def test_is_categorical_dtype() -> None:
    ...


def test_is_string_dtype() -> None:
    ...


def test_is_period_arraylike() -> None:
    ...


def test_is_datetime_arraylike() -> None:
    ...


def test_is_datetimelike() -> None:
    ...


def test_is_integer_dtype(dtype: Any) -> None:
    ...


def test_is_not_integer_dtype(dtype: Any) -> None:
    ...


def test_is_signed_integer_dtype(dtype: Any) -> None:
    ...


def test_is_not_signed_integer_dtype(dtype: Any) -> None:
    ...


def test_is_unsigned_integer_dtype(dtype: Any) -> None:
    ...


def test_is_not_unsigned_integer_dtype(dtype: Any) -> None:
    ...


def test_is_int64_dtype(dtype: Any) -> None:
    ...


def test_is_not_int64_dtype(dtype: Any) -> None:
    ...


def test_is_datetime64_any_dtype() -> None:
    ...


def test_is_datetime64_ns_dtype() -> None:
    ...


def test_is_timedelta64_ns_dtype() -> None:
    ...


def test_is_datetime_or_timedelta_dtype() -> None:
    ...


def test_is_numeric_v_string_like() -> None:
    ...


def test_is_datetimelike_v_numeric() -> None:
    ...


def test_needs_i8_conversion() -> None:
    ...


def test_is_numeric_dtype() -> None:
    ...


def test_is_string_like_dtype() -> None:
    ...


def test_is_float_dtype() -> None:
    ...


def test_is_bool_dtype() -> None:
    ...


def test_is_extension_type(check_scipy: Any) -> None:
    ...


def test_is_complex_dtype() -> None:
    ...


def test_is_offsetlike() -> None:
    ...


def test__get_dtype(input_param: Any, result: Any) -> None:
    ...


def test__get_dtype_sparse() -> None:
    ...


def test__get_dtype_fails(
        input_param: Any, expected_error_message: Any) -> None:
    ...


def test__is_dtype_type(input_param: Any, result: Any) -> Any:
    ...


def test__is_dtype_type_sparse() -> Any:
    ...
