# Stubs for pandas.tests.sparse.frame.test_frame (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,abstract-method,arguments-differ
# pylint: disable=line-too-long

from typing import Any
from pandas.tests.frame.test_api import SharedWithSparse

def test_deprecated() -> None:
    ...

class TestSparseDataFrame(SharedWithSparse):
    klass: Any = ...

    def test_iterrows(self, float_frame: Any, float_string_frame: Any) -> None:
        ...

    def test_itertuples(self, float_frame: Any) -> None:
        ...

    def test_fill_value_when_combine_const(self) -> None:
        ...

    def test_values(self, empty_frame: Any, float_frame: Any) -> None:  # type: ignore
        ...

    def test_copy(self, float_frame: Any) -> None:
        ...

    def test_constructor(
            self, float_frame: Any, float_frame_int_kind: Any,
            float_frame_fill0: Any) -> None:
        ...

    def test_constructor_fill_value_not_scalar_raises(self) -> None:
        ...

    def test_constructor_dict_order(self) -> None:
        ...

    def test_constructor_ndarray(self, float_frame: Any) -> None:
        ...

    def test_constructor_empty(self) -> None:
        ...

    def test_constructor_dataframe(self, float_frame: Any) -> None:
        ...

    def test_constructor_convert_index_once(self) -> None:
        ...

    def test_constructor_from_series(self) -> None:
        ...

    def test_constructor_from_dense_series(self) -> None:
        ...

    def test_constructor_from_unknown_type(self) -> None:
        ...

    def test_constructor_preserve_attr(self) -> None:
        ...

    def test_constructor_nan_dataframe(self) -> None:
        ...

    def test_type_coercion_at_construction(self) -> None:
        ...

    def test_default_dtype(self) -> None:
        ...

    def test_nan_data_with_int_dtype_raises_error(self) -> None:
        ...

    def test_dtypes(self) -> None:
        ...

    def test_shape(
            self, float_frame: Any, float_frame_int_kind: Any,
            float_frame_fill0: Any, float_frame_fill2: Any) -> None:
        ...

    def test_str(self) -> None:
        ...

    def test_array_interface(self, float_frame: Any) -> None:
        ...

    def test_pickle(
            self, float_frame: Any, float_frame_int_kind: Any,
            float_frame_dense: Any, float_frame_fill0: Any,
            float_frame_fill0_dense: Any, float_frame_fill2: Any,
            float_frame_fill2_dense: Any) -> None:
        ...

    def test_dense_to_sparse(self) -> None:
        ...

    def test_deprecated_dense_to_sparse(self) -> None:
        ...

    def test_density(self) -> None:
        ...

    def test_sparse_to_dense(self) -> None:
        ...

    def test_sparse_series_ops(self, float_frame: Any) -> None:
        ...

    def test_sparse_series_ops_i(self, float_frame_int_kind: Any) -> None:
        ...

    def test_sparse_series_ops_z(self, float_frame_fill0: Any) -> None:
        ...

    def test_sparse_series_ops_fill(self, float_frame_fill2: Any) -> None:
        ...

    def test_op_corners(self, float_frame: Any, empty_frame: Any) -> None:
        ...

    def test_scalar_ops(self) -> None:
        ...

    def test_getitem(self) -> None:
        ...

    def test_iloc(self, float_frame: Any) -> None:
        ...

    def test_set_value(self, float_frame: Any) -> None:
        ...

    def test_fancy_index_misc(self, float_frame: Any) -> None:
        ...

    def test_getitem_overload(self, float_frame: Any) -> None:
        ...

    def test_setitem(
            self, float_frame: Any, float_frame_int_kind: Any,
            float_frame_dense: Any, float_frame_fill0: Any,
            float_frame_fill0_dense: Any, float_frame_fill2: Any,
            float_frame_fill2_dense: Any) -> None:
        ...

    def test_setitem_more(self, values: Any) -> None:
        ...

    def test_setitem_corner(self, float_frame: Any) -> None:
        ...

    def test_setitem_array(self, float_frame: Any) -> None:
        ...

    def test_setitem_chained_no_consolidate(self) -> None:
        ...

    def test_delitem(self, float_frame: Any) -> None:
        ...

    def test_set_columns(self, float_frame: Any) -> None:
        ...

    def test_set_index(self, float_frame: Any) -> None:
        ...

    def test_ctor_reindex(self) -> None:
        ...

    def test_append(self, float_frame: Any) -> None:
        ...

    def test_astype(self) -> None:
        ...

    def test_astype_bool(self) -> None:
        ...

    def test_astype_object(self) -> None:
        ...

    def test_fillna(
            self, float_frame_fill0: Any,
            float_frame_fill0_dense: Any) -> None:
        ...

    def test_fillna_fill_value(self) -> None:
        ...

    def test_sparse_frame_pad_backfill_limit(self) -> None:
        ...

    def test_sparse_frame_fillna_limit(self) -> None:
        ...

    def test_rename(self, float_frame: Any) -> None:
        ...

    def test_corr(self, float_frame: Any) -> None:
        ...

    def test_describe(self, float_frame: Any) -> None:
        ...

    def test_join(self, float_frame: Any) -> None:
        ...

    def test_reindex(
            self, float_frame: Any, float_frame_int_kind: Any,
            float_frame_fill0: Any, float_frame_fill2: Any) -> None:
        ...

    def test_reindex_fill_value(
            self, float_frame_fill0: Any,
            float_frame_fill0_dense: Any) -> None:
        ...

    def test_reindex_method(self) -> None:
        ...

    def test_take(self, float_frame: Any) -> None:
        ...

    def test_to_dense(
            self, float_frame: Any, float_frame_int_kind: Any,
            float_frame_dense: Any, float_frame_fill0: Any,
            float_frame_fill0_dense: Any, float_frame_fill2: Any,
            float_frame_fill2_dense: Any) -> None:
        ...

    def test_stack_sparse_frame(
            self, float_frame: Any, float_frame_int_kind: Any,
            float_frame_fill0: Any, float_frame_fill2: Any) -> None:
        ...

    def test_transpose(self, float_frame: Any, float_frame_int_kind: Any, float_frame_dense: Any, float_frame_fill0: Any, float_frame_fill0_dense: Any, float_frame_fill2: Any, float_frame_fill2_dense: Any) -> None:  # type: ignore
        ...

    def test_shift(
            self, float_frame: Any, float_frame_int_kind: Any,
            float_frame_dense: Any, float_frame_fill0: Any,
            float_frame_fill0_dense: Any, float_frame_fill2: Any,
            float_frame_fill2_dense: Any) -> None:
        ...

    def test_count(self, float_frame: Any) -> None:
        ...

    def test_numpy_transpose(self) -> None:
        ...

    def test_combine_first(self, float_frame: Any) -> None:
        ...

    def test_combine_first_with_dense(self) -> None:
        ...

    def test_combine_add(self, float_frame: Any) -> None:
        ...

    def test_isin(self) -> None:
        ...

    def test_sparse_pow_issue(self) -> None:
        ...

    def test_as_blocks(self) -> None:
        ...

    def test_nan_columnname(self) -> None:
        ...

    def test_isna(self) -> None:
        ...

    def test_notna(self) -> None:
        ...

    def test_default_fill_value_with_no_data(self) -> None:
        ...


class TestSparseDataFrameArithmetic:
    def test_numeric_op_scalar(self) -> None:
        ...

    def test_comparison_op_scalar(self) -> None:
        ...


class TestSparseDataFrameAnalytics:
    def test_cumsum(self, float_frame: Any) -> None:
        ...

    def test_numpy_cumsum(self, float_frame: Any) -> None:
        ...

    def test_numpy_func_call(self, float_frame: Any) -> None:
        ...

    def test_quantile(self) -> None:
        ...

    def test_quantile_multi(self) -> None:
        ...

    def test_assign_with_sparse_frame(self) -> None:
        ...

    def test_dropna(self, inplace: Any, how: Any) -> None:
        ...
