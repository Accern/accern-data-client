# Stubs for pandas.tests.reductions.test_reductions (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from typing import Any

def get_objs() -> Any:
    ...


objs: Any

class TestReductions:
    def test_ops(self, opname: Any, obj: Any) -> None:
        ...

    def test_nanops(self) -> None:
        ...

    def test_same_tz_min_max_axis_1(self, op: Any, expected_col: Any) -> None:
        ...

    def test_numpy_reduction_with_tz_aware_dtype(self, tz_aware_fixture: Any, func: Any) -> None:
        ...


class TestIndexReductions:
    def test_max_min_range(self, start: Any, stop: Any, step: Any) -> None:
        ...

    def test_minmax_timedelta64(self) -> None:
        ...

    def test_numpy_minmax_timedelta64(self) -> None:
        ...

    def test_timedelta_ops(self) -> None:
        ...

    def test_minmax_tz(self, tz_naive_fixture: Any) -> None:
        ...

    def test_minmax_nat_datetime64(self, op: Any) -> None:
        ...

    def test_numpy_minmax_integer(self) -> None:
        ...

    def test_numpy_minmax_range(self) -> None:
        ...

    def test_numpy_minmax_datetime64(self) -> None:
        ...

    def test_minmax_period(self) -> None:
        ...

    def test_numpy_minmax_period(self) -> None:
        ...

    def test_min_max_categorical(self) -> None:
        ...


class TestSeriesReductions:
    def test_sum_inf(self) -> None:
        ...

    def test_empty(self, method: Any, unit: Any, use_bottleneck: Any) -> None:
        ...

    def test_empty_multi(self, method: Any, unit: Any) -> None:
        ...

    def test_ops_consistency_on_empty(self, method: Any) -> None:
        ...

    def test_nansum_buglet(self) -> None:
        ...

    def test_sum_overflow(self, use_bottleneck: Any) -> None:
        ...

    def test_empty_timeseries_reductions_return_nat(self) -> None:
        ...

    def test_numpy_argmin_deprecated(self) -> None:
        ...

    def test_numpy_argmax_deprecated(self) -> None:
        ...

    def test_idxmin(self) -> None:
        ...

    def test_idxmax(self) -> None:
        ...

    def test_all_any(self) -> None:
        ...

    def test_all_any_params(self) -> None:
        ...

    def test_timedelta64_analytics(self) -> None:
        ...

    def test_assert_idxminmax_raises(self, test_input: Any, error_type: Any) -> None:
        ...

    def test_idxminmax_with_inf(self) -> None:
        ...


class TestDatetime64SeriesReductions:
    def test_minmax_nat_series(self, nat_ser: Any) -> None:
        ...

    def test_minmax_nat_dataframe(self, nat_df: Any) -> None:
        ...

    def test_min_max(self) -> None:
        ...

    def test_min_max_series(self) -> None:
        ...


class TestCategoricalSeriesReductions:
    def test_min_max(self) -> None:
        ...

    def test_min_max_numeric_only(self) -> None:
        ...


class TestSeriesMode:
    def test_mode_empty(self, dropna: Any, expected: Any) -> None:
        ...

    def test_mode_numerical(self, dropna: Any, data: Any, expected: Any, dt: Any) -> None:
        ...

    def test_mode_numerical_nan(self, dropna: Any, expected: Any) -> None:
        ...

    def test_mode_str_obj(self, dropna: Any, expected1: Any, expected2: Any, expected3: Any) -> None:
        ...

    def test_mode_mixeddtype(self, dropna: Any, expected1: Any, expected2: Any) -> None:
        ...

    def test_mode_datetime(self, dropna: Any, expected1: Any, expected2: Any) -> None:
        ...

    def test_mode_timedelta(self, dropna: Any, expected1: Any, expected2: Any) -> None:
        ...

    def test_mode_category(self, dropna: Any, expected1: Any, expected2: Any, expected3: Any) -> None:
        ...

    def test_mode_intoverflow(self, dropna: Any, expected1: Any, expected2: Any) -> None:
        ...

    def test_mode_sortwarning(self) -> None:
        ...
