# Stubs for pandas.tests.window.test_rolling (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level

from typing import Any
from pandas.tests.window.common import Base


class TestRolling(Base):
    def setup_method(self, method: Any) -> None:
        ...

    def test_doc_string(self) -> None:
        ...

    def test_constructor(self, which: Any) -> None:
        ...

    def test_constructor_with_win_type(self, which: Any) -> None:
        ...

    def test_constructor_with_timedelta_window(self, window: Any) -> None:
        ...

    def test_constructor_timedelta_window_and_minperiods(
            self, window: Any, raw: Any) -> None:
        ...

    def test_numpy_compat(self, method: Any) -> None:
        ...

    def test_closed(self) -> None:
        ...

    def test_closed_empty(
            self, closed: Any, arithmetic_win_operators: Any) -> None:
        ...

    def test_closed_one_entry(self, func: Any) -> None:
        ...

    def test_closed_one_entry_groupby(self, func: Any) -> None:
        ...

    def test_closed_min_max_datetime(
            self, input_dtype: Any, func: Any, closed: Any,
            expected: Any) -> None:
        ...

    def test_closed_uneven(self) -> None:
        ...

    def test_closed_min_max_minp(
            self, func: Any, closed: Any, expected: Any) -> None:
        ...

    def test_closed_median_quantile(self, closed: Any, expected: Any) -> None:
        ...

    def tests_empty_df_rolling(self, roller: Any) -> None:
        ...

    def test_empty_window_median_quantile(self) -> None:
        ...

    def test_missing_minp_zero(self) -> None:
        ...

    def test_missing_minp_zero_variable(self) -> None:
        ...

    def test_multi_index_names(self) -> None:
        ...

    def test_iter_raises(self, klass: Any) -> None:
        ...

    def test_rolling_axis_sum(self, axis_frame: Any) -> None:
        ...

    def test_rolling_axis_count(self, axis_frame: Any) -> None:
        ...
