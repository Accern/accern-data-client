# Stubs for pandas.tests.window.test_dtypes (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level

from typing import Any

class Dtype:
    window: int = ...
    funcs: Any = ...
    def get_expects(self):
        ...

    def test_dtypes(self) -> None:
        ...

    def check_dtypes(
            self, f: Any, f_name: Any, d: Any, d_name: Any, exp: Any) -> None:
        ...


class TestDtype_object(Dtype):
    dtype: Any = ...

class Dtype_integer(Dtype):
    ...


class TestDtype_int8(Dtype_integer):
    dtype: Any = ...


class TestDtype_int16(Dtype_integer):
    dtype: Any = ...


class TestDtype_int32(Dtype_integer):
    dtype: Any = ...


class TestDtype_int64(Dtype_integer):
    dtype: Any = ...


class Dtype_uinteger(Dtype):
    ...


class TestDtype_uint8(Dtype_uinteger):
    dtype: Any = ...


class TestDtype_uint16(Dtype_uinteger):
    dtype: Any = ...


class TestDtype_uint32(Dtype_uinteger):
    dtype: Any = ...


class TestDtype_uint64(Dtype_uinteger):
    dtype: Any = ...


class Dtype_float(Dtype):
    ...


class TestDtype_float16(Dtype_float):
    dtype: Any = ...


class TestDtype_float32(Dtype_float):
    dtype: Any = ...


class TestDtype_float64(Dtype_float):
    dtype: Any = ...


class TestDtype_category(Dtype):
    dtype: str = ...
    include_df: bool = ...


class DatetimeLike(Dtype):
    def check_dtypes(
            self, f: Any, f_name: Any, d: Any, d_name: Any, exp: Any) -> None:
        ...


class TestDtype_timedelta(DatetimeLike):
    dtype: Any = ...


class TestDtype_datetime(DatetimeLike):
    dtype: Any = ...


class TestDtype_datetime64UTC(DatetimeLike):
    dtype: str = ...
