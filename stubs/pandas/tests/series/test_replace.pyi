# Stubs for pandas.tests.series.test_replace (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
from typing import Any
from .common import TestData


class TestSeriesReplace(TestData):
    def test_replace(self) -> None:
        ...

    def test_replace_gh5319(self) -> None:
        ...

    def test_replace_with_single_list(self) -> None:
        ...

    def test_replace_with_empty_list(self) -> None:
        ...

    def test_replace_mixed_types(self) -> None:
        ...

    def test_replace_bool_with_string_no_op(self) -> None:
        ...

    def test_replace_bool_with_string(self) -> None:
        ...

    def test_replace_bool_with_bool(self) -> None:
        ...

    def test_replace_with_dict_with_bool_keys(self) -> None:
        ...

    def test_replace2(self) -> None:
        ...

    def test_replace_with_empty_dictlike(self) -> None:
        ...

    def test_replace_string_with_number(self) -> None:
        ...

    def test_replace_replacer_equals_replacement(self) -> None:
        ...

    def test_replace_unicode_with_number(self) -> None:
        ...

    def test_replace_mixed_types_with_string(self) -> None:
        ...

    def test_replace_categorical(self, categorical: Any, numeric: Any) -> None:
        ...

    def test_replace_with_no_overflowerror(self) -> None:
        ...
