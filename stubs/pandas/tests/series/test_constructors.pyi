# Stubs for pandas.tests.series.test_constructors (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from typing import Any

class TestSeriesConstructors:
    def test_empty_constructor(self, constructor: Any, check_index_type: Any) -> None:
        ...

    def test_invalid_dtype(self) -> None:
        ...

    def test_scalar_conversion(self) -> None:
        ...

    def test_constructor(self, datetime_series: Any) -> None:
        ...

    def test_constructor_empty(self, input_class: Any) -> None:
        ...

    def test_constructor_nan(self, input_arg: Any) -> None:
        ...

    def test_constructor_dtype_only(self, dtype: Any, index: Any) -> None:
        ...

    def test_constructor_no_data_index_order(self) -> None:
        ...

    def test_constructor_no_data_string_type(self) -> None:
        ...

    def test_constructor_string_element_string_type(self, item: Any) -> None:
        ...

    def test_constructor_dtype_str_na_values(self, string_dtype: Any) -> None:
        ...

    def test_constructor_series(self) -> None:
        ...

    def test_constructor_iterable(self) -> None:
        ...

    def test_constructor_sequence(self) -> None:
        ...

    def test_constructor_single_str(self) -> None:
        ...

    def test_constructor_list_like(self) -> None:
        ...

    def test_constructor_index_dtype(self, dtype: Any) -> None:
        ...

    def test_constructor_list_str(self, input_vals: Any, string_dtype: Any) -> None:
        ...

    def test_constructor_list_str_na(self, string_dtype: Any) -> None:
        ...

    def test_constructor_generator(self) -> None:
        ...

    def test_constructor_map(self):
        ...

    def test_constructor_categorical(self) -> None:
        ...

    def test_constructor_categorical_with_coercion(self) -> None:
        ...

    def test_constructor_categorical_dtype(self) -> None:
        ...

    def test_constructor_categorical_string(self) -> None:
        ...

    def test_categorical_ordered_none_deprecated(self, none: Any, warning: Any) -> None:
        ...

    def test_categorical_sideeffects_free(self) -> None:
        ...

    def test_unordered_compare_equal(self) -> None:
        ...

    def test_constructor_maskedarray(self) -> None:
        ...

    def test_constructor_maskedarray_hardened(self) -> None:
        ...

    def test_series_ctor_plus_datetimeindex(self) -> None:
        ...

    def test_constructor_default_index(self) -> None:
        ...

    def test_constructor_index_mismatch(self, input: Any) -> None:
        ...

    def test_constructor_numpy_scalar(self) -> None:
        ...

    def test_constructor_broadcast_list(self) -> None:
        ...

    def test_constructor_corner(self) -> None:
        ...

    def test_constructor_sanitize(self) -> None:
        ...

    def test_constructor_copy(self) -> None:
        ...

    def test_constructor_limit_copies(self, index: Any) -> None:
        ...

    def test_constructor_pass_none(self) -> None:
        ...

    def test_constructor_pass_nan_nat(self) -> None:
        ...

    def test_constructor_cast(self) -> None:
        ...

    def test_constructor_unsigned_dtype_overflow(self, uint_dtype: Any) -> None:
        ...

    def test_constructor_coerce_float_fail(self, any_int_dtype: Any) -> None:
        ...

    def test_constructor_coerce_float_valid(self, float_dtype: Any) -> None:
        ...

    def test_constructor_dtype_no_cast(self) -> None:
        ...

    def test_constructor_datelike_coercion(self) -> None:
        ...

    def test_constructor_datetimes_with_nulls(self) -> None:
        ...

    def test_constructor_dtype_datetime64(self) -> None:
        ...

    def test_constructor_with_datetime_tz(self) -> None:
        ...

    def test_construction_to_datetimelike_unit(self, arr_dtype: Any, dtype: Any, unit: Any) -> None:
        ...

    def test_constructor_with_naive_string_and_datetimetz_dtype(self, arg: Any) -> None:
        ...

    def test_construction_interval(self) -> None:
        ...

    def test_construction_consistency(self) -> None:
        ...

    def test_constructor_infer_period(self) -> None:
        ...

    def test_constructor_period_incompatible_frequency(self) -> None:
        ...

    def test_constructor_periodindex(self) -> None:
        ...

    def test_constructor_dict(self) -> None:
        ...

    def test_constructor_dict_order(self) -> None:
        ...

    def test_constructor_dict_nan_key(self, value: Any) -> None:
        ...

    def test_constructor_dict_datetime64_index(self):
        ...

    def test_constructor_list_of_tuples(self) -> None:
        ...

    def test_constructor_tuple_of_tuples(self) -> None:
        ...

    def test_constructor_dict_of_tuples(self) -> None:
        ...

    def test_constructor_set(self) -> None:
        ...

    def test_fromDict(self) -> None:
        ...

    def test_fromValue(self, datetime_series: Any) -> None:
        ...

    def test_constructor_dtype_timedelta64(self) -> None:
        ...

    def test_constructor_mixed_tz(self) -> None:
        ...

    def test_NaT_scalar(self) -> None:
        ...

    def test_NaT_cast(self) -> None:
        ...

    def test_constructor_name_hashable(self) -> None:
        ...

    def test_constructor_name_unhashable(self) -> None:
        ...

    def test_auto_conversion(self) -> None:
        ...

    def test_convert_non_ns(self) -> None:
        ...

    def test_constructor_cant_cast_datetimelike(self, index: Any) -> None:
        ...

    def test_constructor_cast_object(self, index: Any) -> None:
        ...

    def test_constructor_generic_timestamp_no_frequency(self, dtype: Any) -> None:
        ...

    def test_constructor_generic_timestamp_bad_frequency(self, dtype: Any, msg: Any) -> None:
        ...

    def test_constructor_range_dtype(self, dtype: Any) -> None:
        ...

    def test_constructor_tz_mixed_data(self) -> None:
        ...
