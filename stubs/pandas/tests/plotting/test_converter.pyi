# Stubs for pandas.tests.plotting.test_converter (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from typing import Any

def test_initial_warning() -> None:
    ...

def test_timtetonum_accepts_unicode() -> None:
    ...


class TestRegistration:
    def test_register_by_default(self) -> None:
        ...

    def test_warns(self) -> None:
        ...

    def test_registering_no_warning(self) -> None:
        ...

    def test_pandas_plots_register(self) -> None:
        ...

    def test_matplotlib_formatters(self) -> None:
        ...

    def test_option_no_warning(self) -> None:
        ...

    def test_registry_resets(self) -> None:
        ...

    def test_old_import_warns(self) -> None:
        ...


class TestDateTimeConverter:
    dtc: Any = ...
    tc: Any = ...
    def setup_method(self, method: Any) -> None:
        ...

    def test_convert_accepts_unicode(self) -> None:
        ...

    def test_conversion(self) -> None:
        ...

    def test_conversion_float(self) -> None:
        ...

    def test_conversion_outofbounds_datetime(self) -> None:
        ...

    def test_time_formatter(self, time: Any, format_expected: Any) -> None:
        ...

    def test_dateindex_conversion(self) -> None:
        ...

    def test_resolution(self) -> None:
        ...

    def test_convert_nested(self) -> None:
        ...


class TestPeriodConverter:
    pc: Any = ...
    axis: Any = ...
    def setup_method(self, method: Any) -> None:
        ...

    def test_convert_accepts_unicode(self) -> None:
        ...

    def test_conversion(self) -> None:
        ...

    def test_integer_passthrough(self) -> None:
        ...

    def test_convert_nested(self) -> None:
        ...
