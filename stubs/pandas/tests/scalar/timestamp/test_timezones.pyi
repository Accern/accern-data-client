# Stubs for pandas.tests.scalar.timestamp.test_timezones (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from typing import Any

class TestTimestampTZOperations:
    def test_tz_localize_pushes_out_of_bounds(self) -> None:
        ...

    def test_tz_localize_ambiguous_bool(self) -> None:
        ...

    def test_tz_localize_ambiguous(self) -> None:
        ...

    def test_tz_localize_nonexistent(self, stamp: Any, tz: Any) -> None:
        ...

    def test_tz_localize_errors_ambiguous(self) -> None:
        ...

    def test_tz_localize_errors_invalid_arg(self) -> None:
        ...

    def test_tz_localize_errors_coerce(self) -> None:
        ...

    def test_tz_localize_roundtrip(self, stamp: Any, tz_aware_fixture: Any) -> None:
        ...

    def test_tz_localize_ambiguous_compat(self) -> None:
        ...

    def test_timestamp_tz_localize(self, tz: Any) -> None:
        ...

    def test_timestamp_tz_localize_nonexistent_shift(self, start_ts: Any, tz: Any, end_ts: Any, shift: Any, tz_type: Any) -> None:
        ...

    def test_timestamp_tz_localize_nonexistent_shift_invalid(self, offset: Any, tz_type: Any) -> None:
        ...

    def test_timestamp_tz_localize_nonexistent_NaT(self, tz: Any) -> None:
        ...

    def test_timestamp_tz_localize_nonexistent_raise(self, tz: Any) -> None:
        ...

    def test_tz_convert_roundtrip(self, stamp: Any, tz_aware_fixture: Any) -> None:
        ...

    def test_astimezone(self, tzstr: Any) -> None:
        ...

    def test_tz_convert_utc_with_system_utc(self) -> None:
        ...

    def test_timestamp_constructor_tz_utc(self) -> None:
        ...

    def test_timestamp_to_datetime_tzoffset(self) -> None:
        ...

    def test_timestamp_constructor_near_dst_boundary(self) -> None:
        ...

    def test_timestamp_constructed_by_date_and_tz(self, tz: Any) -> None:
        ...

    def test_timestamp_add_timedelta_push_over_dst_boundary(self, tz: Any) -> None:
        ...

    def test_timestamp_timetz_equivalent_with_datetime_tz(self, tz_naive_fixture: Any) -> None:
        ...
