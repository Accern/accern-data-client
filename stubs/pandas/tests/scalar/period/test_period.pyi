# Stubs for pandas.tests.scalar.period.test_period (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin

from typing import Any

class TestPeriodConstruction:
    def test_construction(self) -> None:
        ...

    def test_construction_bday(self) -> None:
        ...

    def test_construction_quarter(self) -> None:
        ...

    def test_construction_month(self) -> None:
        ...

    def test_period_constructor_offsets(self) -> None:
        ...

    def test_invalid_arguments(self) -> None:
        ...

    def test_constructor_corner(self) -> None:
        ...

    def test_constructor_infer_freq(self) -> None:
        ...

    def test_multiples(self) -> None:
        ...

    def test_period_cons_quarterly(self, month: Any) -> None:
        ...

    def test_period_cons_annual(self, month: Any) -> None:
        ...

    def test_period_cons_weekly(self, num: Any, day: Any) -> None:
        ...

    def test_period_from_ordinal(self) -> None:
        ...

    def test_period_cons_nat(self) -> None:
        ...

    def test_period_cons_mult(self) -> None:
        ...

    def test_period_cons_combined(self) -> None:
        ...


class TestPeriodMethods:
    def test_round_trip(self) -> None:
        ...

    def test_hash(self) -> None:
        ...

    def test_to_timestamp_tz_arg(self, tzstr: Any) -> None:
        ...

    def test_to_timestamp_tz_arg_dateutil(self, tzstr: Any) -> None:
        ...

    def test_to_timestamp_tz_arg_dateutil_from_string(self) -> None:
        ...

    def test_to_timestamp_mult(self) -> None:
        ...

    def test_to_timestamp(self) -> None:
        ...

    def test_repr(self) -> None:
        ...

    def test_repr_nat(self) -> None:
        ...

    def test_millisecond_repr(self) -> None:
        ...

    def test_microsecond_repr(self) -> None:
        ...

    def test_strftime(self) -> None:
        ...


class TestPeriodProperties:
    def test_is_leap_year(self, freq: Any) -> None:
        ...

    def test_quarterly_negative_ordinals(self) -> None:
        ...

    def test_freq_str(self) -> None:
        ...

    def test_period_deprecated_freq(self) -> None:
        ...

    def test_start_time(self) -> None:
        ...

    def test_end_time(self):
        ...

    def test_anchor_week_end_time(self):
        ...

    def test_properties_annually(self) -> None:
        ...

    def test_properties_quarterly(self) -> None:
        ...

    def test_properties_monthly(self) -> None:
        ...

    def test_properties_weekly(self) -> None:
        ...

    def test_properties_weekly_legacy(self) -> None:
        ...

    def test_properties_daily(self) -> None:
        ...

    def test_properties_hourly(self) -> None:
        ...

    def test_properties_minutely(self) -> None:
        ...

    def test_properties_secondly(self) -> None:
        ...


class TestPeriodField:
    def test_get_period_field_array_raises_on_out_of_range(self) -> None:
        ...


class TestComparisons:
    january1: Any = ...
    january2: Any = ...
    february: Any = ...
    march: Any = ...
    day: Any = ...
    def setup_method(self, method: Any) -> None:
        ...

    def test_equal(self) -> None:
        ...

    def test_equal_Raises_Value(self) -> None:
        ...

    def test_notEqual(self) -> None:
        ...

    def test_greater(self) -> None:
        ...

    def test_greater_Raises_Value(self) -> None:
        ...

    def test_greater_Raises_Type(self) -> None:
        ...

    def test_greaterEqual(self) -> None:
        ...

    def test_greaterEqual_Raises_Value(self) -> None:
        ...

    def test_smallerEqual(self) -> None:
        ...

    def test_smallerEqual_Raises_Value(self) -> None:
        ...

    def test_smallerEqual_Raises_Type(self) -> None:
        ...

    def test_smaller(self) -> None:
        ...

    def test_smaller_Raises_Value(self) -> None:
        ...

    def test_smaller_Raises_Type(self) -> None:
        ...

    def test_sort(self) -> None:
        ...

    def test_period_nat_comp(self) -> None:
        ...


class TestArithmetic:
    def test_sub_delta(self) -> None:
        ...

    def test_add_integer(self) -> None:
        ...

    def test_add_sub_nat(self) -> None:
        ...

    def test_add_invalid(self) -> None:
        ...

    boxes: Any = ...
    ids: Any = ...
    def test_add_timestamp_raises(self, rbox: Any, lbox: Any) -> None:
        ...

    def test_sub(self) -> None:
        ...

    def test_sub_n_gt_1_ticks(self, tick_classes: Any, n: Any) -> None:
        ...

    def test_sub_n_gt_1_offsets(self, offset: Any, kwd_name: Any, n: Any, normalize: Any) -> None:
        ...

    def test_add_offset(self) -> None:
        ...

    def test_add_offset_nat(self) -> None:
        ...

    def test_sub_offset(self) -> None:
        ...

    def test_sub_offset_nat(self) -> None:
        ...

    def test_nat_ops(self, freq: Any) -> None:
        ...

    def test_period_ops_offset(self) -> None:
        ...


def test_period_immutable() -> None:
    ...

def test_small_year_parsing() -> None:
    ...
