# Stubs for pandas.tests.frame.test_dtypes (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level

from typing import Any

class TestDataFrameDataTypes:
    def test_concat_empty_dataframe_dtypes(self) -> None:
        ...

    def test_empty_frame_dtypes_ftypes(self) -> None:
        ...

    def test_datetime_with_tz_dtypes(self) -> None:
        ...

    def test_dtypes_are_correct_after_column_slice(self) -> None:
        ...

    def test_select_dtypes_include_using_list_like(self) -> None:
        ...

    def test_select_dtypes_exclude_using_list_like(self) -> None:
        ...

    def test_select_dtypes_exclude_include_using_list_like(self) -> None:
        ...

    def test_select_dtypes_include_using_scalars(self) -> None:
        ...

    def test_select_dtypes_exclude_using_scalars(self) -> None:
        ...

    def test_select_dtypes_include_exclude_using_scalars(self) -> None:
        ...

    def test_select_dtypes_include_exclude_mixed_scalars_lists(self) -> None:
        ...

    def test_select_dtypes_duplicate_columns(self) -> None:
        ...

    def test_select_dtypes_not_an_attr_but_still_valid_dtype(self) -> None:
        ...

    def test_select_dtypes_empty(self) -> None:
        ...

    def test_select_dtypes_bad_datetime64(self) -> None:
        ...

    def test_select_dtypes_datetime_with_tz(self) -> None:
        ...

    def test_select_dtypes_str_raises(self, dtype: Any, arg: Any) -> None:
        ...

    def test_select_dtypes_bad_arg_raises(self) -> None:
        ...

    def test_select_dtypes_typecodes(self):
        ...

    def test_dtypes_gh8722(self, float_string_frame: Any) -> None:
        ...

    def test_ftypes(self, mixed_float_frame: Any) -> None:
        ...

    def test_astype_float(self, float_frame: Any) -> None:
        ...

    def test_astype_mixed_float(self, mixed_float_frame: Any) -> None:
        ...

    def test_astype_mixed_type(self, mixed_type_frame: Any) -> None:
        ...

    def test_astype_with_exclude_string(self, float_frame: Any) -> None:
        ...

    def test_astype_with_view_float(self, float_frame: Any) -> None:
        ...

    def test_astype_with_view_mixed_float(
            self, mixed_float_frame: Any) -> None:
        ...

    def test_astype_cast_nan_inf_int(self, val: Any, dtype: Any) -> None:
        ...

    def test_astype_str(self):
        ...

    def test_astype_str_float(self) -> None:
        ...

    def test_astype_dict_like(self, dtype_class: Any) -> None:
        ...

    def test_astype_duplicate_col(self) -> None:
        ...

    def test_astype_categorical(self, dtype: Any) -> None:
        ...

    def test_astype_categoricaldtype_class_raises(self, cls: Any) -> None:
        ...

    def test_astype_extension_dtypes(self, dtype: Any) -> None:
        ...

    def test_astype_extension_dtypes_1d(self, dtype: Any) -> None:
        ...

    def test_astype_extension_dtypes_duplicate_col(self, dtype: Any) -> None:
        ...

    def test_astype_column_metadata(self, dtype: Any) -> None:
        ...

    def test_astype_from_datetimelike_to_objectt(
            self, dtype: Any, unit: Any) -> None:
        ...

    def test_astype_to_datetimelike_unit(
            self, arr_dtype: Any, dtype: Any, unit: Any) -> None:
        ...

    def test_astype_to_datetime_unit(self, unit: Any) -> None:
        ...

    def test_astype_to_timedelta_unit_ns(self, unit: Any) -> None:
        ...

    def test_astype_to_timedelta_unit(self, unit: Any) -> None:
        ...

    def test_astype_to_incorrect_datetimelike(self, unit: Any) -> None:
        ...

    def test_timedeltas(self) -> None:
        ...

    def test_arg_for_errors_in_astype(self) -> None:
        ...

    def test_arg_for_errors_in_astype_dictlist(self) -> None:
        ...

    def test_constructor_list_str(
            self, input_vals: Any, string_dtype: Any) -> None:
        ...

    def test_constructor_list_str_na(self, string_dtype: Any) -> None:
        ...

    def test_is_homogeneous_type(self, data: Any, expected: Any) -> None:
        ...

    def test_asarray_homogenous(self) -> None:
        ...


class TestDataFrameDatetimeWithTZ:
    def test_interleave(self, timezone_frame: Any) -> None:
        ...

    def test_astype(self, timezone_frame: Any) -> None:
        ...

    def test_astype_str(self, timezone_frame: Any) -> None:
        ...
