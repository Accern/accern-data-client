# Stubs for pandas.tests.arrays.test_datetimelike (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level

from typing import Any


def period_index(request: Any) -> Any:
    ...


def datetime_index(request: Any) -> Any:
    ...


def timedelta_index(request: Any) -> Any:
    ...


class SharedTests:
    index_cls: Any = ...

    def test_compare_len1_raises(self) -> None:
        ...

    def test_take(self) -> None:
        ...

    def test_take_fill(self) -> None:
        ...

    def test_concat_same_type(self) -> None:
        ...

    def test_unbox_scalar(self) -> None:
        ...

    def test_check_compatible_with(self) -> None:
        ...

    def test_scalar_from_string(self) -> None:
        ...

    def test_reduce_invalid(self) -> None:
        ...

    def test_fillna_method_doesnt_change_orig(self, method: Any) -> None:
        ...

    def test_searchsorted(self) -> None:
        ...

    def test_setitem(self) -> None:
        ...

    def test_setitem_raises(self) -> None:
        ...


class TestDatetimeArray(SharedTests):
    index_cls: Any = ...
    array_cls: Any = ...
    def test_round(self, tz_naive_fixture: Any) -> None:
        ...

    def test_array_interface(self, datetime_index: Any) -> None:
        ...

    def test_array_object_dtype(self, tz_naive_fixture: Any) -> None:
        ...

    def test_array_tz(self, tz_naive_fixture: Any) -> None:
        ...

    def test_array_i8_dtype(self, tz_naive_fixture: Any) -> None:
        ...

    def test_from_array_keeps_base(self) -> None:
        ...

    def test_from_dti(self, tz_naive_fixture: Any) -> None:
        ...

    def test_astype_object(self, tz_naive_fixture: Any) -> None:
        ...

    def test_to_perioddelta(self, datetime_index: Any, freqstr: Any) -> None:
        ...

    def test_to_period(self, datetime_index: Any, freqstr: Any) -> None:
        ...

    def test_bool_properties(self, datetime_index: Any, propname: Any) -> None:
        ...

    def test_int_properties(self, datetime_index: Any, propname: Any) -> None:
        ...

    def test_take_fill_valid(
            self, datetime_index: Any, tz_naive_fixture: Any) -> None:
        ...

    def test_concat_same_type_invalid(self, datetime_index: Any) -> None:
        ...

    def test_concat_same_type_different_freq(self) -> None:
        ...


class TestTimedeltaArray(SharedTests):
    index_cls: Any = ...
    array_cls: Any = ...
    def test_from_tdi(self) -> None:
        ...

    def test_astype_object(self) -> None:
        ...

    def test_to_pytimedelta(self, timedelta_index: Any) -> None:
        ...

    def test_total_seconds(self, timedelta_index: Any) -> None:
        ...

    def test_int_properties(self, timedelta_index: Any, propname: Any) -> None:
        ...

    def test_array_interface(self, timedelta_index: Any) -> None:
        ...

    def test_take_fill_valid(self, timedelta_index: Any) -> None:
        ...


class TestPeriodArray(SharedTests):
    index_cls: Any = ...
    array_cls: Any = ...
    def test_from_pi(self, period_index: Any) -> None:
        ...

    def test_astype_object(self, period_index: Any) -> None:
        ...

    def test_to_timestamp(self, how: Any, period_index: Any) -> None:
        ...

    def test_bool_properties(self, period_index: Any, propname: Any) -> None:
        ...

    def test_int_properties(self, period_index: Any, propname: Any) -> None:
        ...

    def test_array_interface(self, period_index: Any) -> None:
        ...


def test_casting_nat_setitem_array(array: Any, casting_nats: Any) -> None:
    ...


def test_invalid_nat_setitem_array(array: Any, non_casting_nats: Any) -> None:
    ...
