# Stubs for pandas.tests.arrays.test_integer (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name,c-extension-no-member,import-error

from typing import Any
from pandas.tests.extension.base import BaseOpsUtil


def make_data() -> Any:
    ...


def data(dtype: Any) -> Any:
    ...


def data_missing(dtype: Any) -> Any:
    ...


def all_data(request: Any, data: Any, data_missing: Any) -> Any:
    ...


def test_dtypes(dtype: Any) -> None:
    ...


def test_repr_dtype(dtype: Any, expected: Any) -> None:
    ...


def test_repr_array() -> None:
    ...


def test_repr_array_long() -> None:
    ...


class TestConstructors:
    def test_from_dtype_from_float(self, data: Any) -> None:
        ...


class TestArithmeticOps(BaseOpsUtil):
    def test_arith_integer_array(
            self, data: Any, all_arithmetic_operators: Any) -> None:
        ...

    def test_arith_series_with_scalar(
            self, data: Any, all_arithmetic_operators: Any) -> None:
        ...

    def test_arith_frame_with_scalar(
            self, data: Any, all_arithmetic_operators: Any) -> None:
        ...

    def test_arith_series_with_array(
            self, data: Any, all_arithmetic_operators: Any) -> None:
        ...

    def test_arith_coerce_scalar(
            self, data: Any, all_arithmetic_operators: Any) -> None:
        ...

    def test_arithmetic_conversion(
            self, all_arithmetic_operators: Any, other: Any) -> None:
        ...

    def test_arith_zero_dim_ndarray(self, other: Any) -> None:
        ...

    def test_error(self, data: Any, all_arithmetic_operators: Any) -> None:
        ...

    def test_pow(self) -> None:
        ...

    def test_rpow_one_to_na(self) -> None:
        ...


class TestComparisonOps(BaseOpsUtil):
    def test_compare_scalar(
            self, data: Any, all_compare_operators: Any) -> None:
        ...

    def test_compare_array(
            self, data: Any, all_compare_operators: Any) -> None:
        ...


class TestCasting:
    def test_construct_index(self, all_data: Any, dropna: Any) -> None:
        ...

    def test_astype_index(self, all_data: Any, dropna: Any) -> None:
        ...

    def test_astype(self, all_data: Any) -> None:
        ...

    def test_astype_specific_casting(self, dtype: Any) -> None:
        ...

    def test_construct_cast_invalid(self, dtype: Any) -> None:
        ...


def test_frame_repr(data_missing: Any) -> None:
    ...


def test_conversions(data_missing: Any) -> None:
    ...


def test_integer_array_constructor() -> None:
    ...


def test_integer_array_constructor_none_is_nan(a: Any, b: Any) -> None:
    ...


def test_integer_array_constructor_copy() -> None:
    ...


def test_to_integer_array_error(values: Any) -> None:
    ...


def test_to_integer_array_inferred_dtype() -> None:
    ...


def test_to_integer_array_dtype_keyword() -> None:
    ...


def test_to_integer_array_float() -> None:
    ...


def test_to_integer_array_bool(
        bool_values: Any, int_values: Any, target_dtype: Any,
        expected_dtype: Any) -> None:
    ...


def test_to_integer_array(
        values: Any, to_dtype: Any, result_dtype: Any) -> None:
    ...


def test_cross_type_arithmetic() -> None:
    ...


def test_preserve_dtypes(op: Any) -> None:
    ...


def test_reduce_to_float(op: Any) -> None:
    ...


def test_astype_nansafe() -> None:
    ...


def test_ufuncs_single_int(ufunc: Any) -> None:
    ...


def test_ufuncs_single_float(ufunc: Any) -> None:
    ...


def test_ufuncs_binary_int(ufunc: Any) -> None:
    ...


def test_ufunc_reduce_raises(values: Any) -> None:
    ...
