# Stubs for pandas.tests.arrays.categorical.test_indexing (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level

from typing import Any
from pandas.tests.arrays.categorical.common import TestCategorical


class TestCategoricalIndexingWithFactor(TestCategorical):
    def test_getitem(self) -> None:
        ...

    def test_setitem(self) -> None:
        ...

    def test_setitem_same_but_unordered(self, other: Any) -> None:
        ...

    def test_setitem_different_unordered_raises(self, other: Any) -> None:
        ...

    def test_setitem_same_ordered_rasies(self, other: Any) -> None:
        ...


class TestCategoricalIndexing:
    def test_getitem_listlike(self) -> None:
        ...

    def test_periodindex(self) -> None:
        ...

    def test_categories_assigments(self) -> None:
        ...

    def test_get_indexer_non_unique(
            self, idx_values: Any, key_values: Any, key_class: Any) -> None:
        ...

    def test_where_unobserved_nan(self) -> None:
        ...

    def test_where_unobserved_categories(self) -> None:
        ...

    def test_where_other_categorical(self) -> None:
        ...

    def test_where_warns(self) -> None:
        ...

    def test_where_ordered_differs_rasies(self) -> None:
        ...


def test_mask_with_boolean(index: Any) -> None:
    ...


def test_mask_with_boolean_raises(index: Any) -> None:
    ...


def non_coercible_categorical(monkeypatch: Any) -> None:
    ...


def test_series_at(non_coercible_categorical: Any) -> None:
    ...
