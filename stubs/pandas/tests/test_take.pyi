# Stubs for pandas.tests.test_take (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level

from typing import Any

def writeable(request: Any) -> Any:
    ...


def dtype_can_hold_na(request: Any) -> Any:
    ...


def dtype_fill_out_dtype(request: Any) -> Any:
    ...


class TestTake:
    fill_error: Any = ...

    def test_1d_with_out(self, dtype_can_hold_na: Any, writeable: Any) -> None:
        ...

    def test_1d_fill_nonna(self, dtype_fill_out_dtype: Any) -> None:
        ...

    def test_2d_with_out(self, dtype_can_hold_na: Any, writeable: Any) -> None:
        ...

    def test_2d_fill_nonna(self, dtype_fill_out_dtype: Any) -> None:
        ...

    def test_3d_with_out(self, dtype_can_hold_na: Any) -> None:
        ...

    def test_3d_fill_nonna(self, dtype_fill_out_dtype: Any) -> None:
        ...

    def test_1d_other_dtypes(self) -> None:
        ...

    def test_2d_other_dtypes(self) -> None:
        ...

    def test_1d_bool(self) -> None:
        ...

    def test_2d_bool(self) -> None:
        ...

    def test_2d_float32(self) -> None:
        ...

    def test_2d_datetime64(self) -> None:
        ...

    def test_take_axis_0(self) -> None:
        ...

    def test_take_axis_1(self) -> None:
        ...


class TestExtensionTake:
    def test_bounds_check_large(self) -> None:
        ...

    def test_bounds_check_small(self) -> None:
        ...

    def test_take_empty(self, allow_fill: Any) -> None:
        ...

    def test_take_na_empty(self) -> None:
        ...

    def test_take_coerces_list(self) -> None:
        ...
