# Stubs for pandas.tests.indexes.interval.test_construction (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ

from typing import Any

def name(request: Any) -> Any:
    ...


class Base:
    def test_constructor(self, constructor: Any, breaks: Any, closed: Any, name: Any) -> None:
        ...

    def test_constructor_dtype(self, constructor: Any, breaks: Any, subtype: Any) -> None:
        ...

    def test_constructor_nan(self, constructor: Any, breaks: Any, closed: Any) -> None:
        ...

    def test_constructor_empty(self, constructor: Any, breaks: Any, closed: Any) -> None:
        ...

    def test_constructor_string(self, constructor: Any, breaks: Any) -> None:
        ...

    def test_constructor_categorical_valid(self, constructor: Any, cat_constructor: Any) -> None:
        ...

    def test_generic_errors(self, constructor: Any) -> None:
        ...


class TestFromArrays(Base):
    def constructor(self):
        ...

    def get_kwargs_from_breaks(self, breaks: Any, closed: str = ...) -> Any:
        ...

    def test_constructor_errors(self) -> None:
        ...

    def test_mixed_float_int(self, left_subtype: Any, right_subtype: Any) -> None:
        ...


class TestFromBreaks(Base):
    def constructor(self):
        ...

    def get_kwargs_from_breaks(self, breaks: Any, closed: str = ...) -> Any:
        ...

    def test_constructor_errors(self) -> None:
        ...

    def test_length_one(self) -> None:
        ...


class TestFromTuples(Base):
    def constructor(self):
        ...

    def get_kwargs_from_breaks(self, breaks: Any, closed: str = ...) -> Any:
        ...

    def test_constructor_errors(self) -> None:
        ...

    def test_na_tuples(self) -> None:
        ...


class TestClassConstructors(Base):
    def constructor(self, request: Any):  # type: ignore
        ...

    def get_kwargs_from_breaks(self, breaks: Any, closed: str = ...) -> Any:
        ...

    def test_generic_errors(self, constructor: Any) -> None:
        ...

    def test_constructor_string(self) -> None:  # type: ignore
        ...

    def test_constructor_errors(self, constructor: Any) -> None:
        ...

    def test_override_inferred_closed(self, constructor: Any, data: Any, closed: Any) -> None:
        ...

    def test_index_object_dtype(self, values_constructor: Any) -> None:
        ...

    def test_index_mixed_closed(self) -> None:
        ...


class TestFromIntervals(TestClassConstructors):
    def constructor(self) -> Any:  # type: ignore
        ...

    def test_deprecated(self) -> None:
        ...

    def test_index_object_dtype(self) -> None:  # type: ignore
        ...

    def test_index_mixed_closed(self) -> None:
        ...
