# Stubs for pandas.tests.indexes.datetimes.test_datetime (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long

from typing import Any

randn: Any


class TestDatetimeIndex:
    def test_roundtrip_pickle_with_tz(self) -> None:
        ...

    def test_reindex_preserves_tz_if_target_is_empty_list_or_array(
            self) -> None:
        ...

    def test_time_loc(self) -> None:
        ...

    def test_time_overflow_for_32bit_machines(self) -> None:
        ...

    def test_nat(self) -> None:
        ...

    def test_week_of_month_frequency(self) -> None:
        ...

    def test_hash_error(self) -> None:
        ...

    def test_stringified_slice_with_tz(self) -> None:
        ...

    def test_append_join_nondatetimeindex(self) -> None:
        ...

    def test_map(self):
        ...

    def test_map_fallthrough(self, capsys: Any) -> None:
        ...

    def test_iteration_preserves_tz(self) -> None:
        ...

    def test_iteration_over_chunksize(self, periods: Any) -> None:
        ...

    def test_misc_coverage(self) -> None:
        ...

    def test_string_index_series_name_converted(self) -> None:
        ...

    def test_get_duplicates(self) -> None:
        ...

    def test_argmin_argmax(self) -> None:
        ...

    def test_sort_values(self) -> None:
        ...

    def test_map_bug_1677(self) -> None:
        ...

    def test_groupby_function_tuple_1677(self):
        ...

    def test_append_numpy_bug_1681(self) -> None:
        ...

    def test_isin(self) -> None:
        ...

    def test_does_not_convert_mixed_integer(self):
        ...

    def test_join_self(self, join_type: Any) -> None:
        ...

    def assert_index_parameters(self, index: Any) -> None:
        ...

    def test_ns_index(self) -> None:
        ...

    def test_join_with_period_index(self, join_type: Any) -> None:
        ...

    def test_factorize(self) -> None:
        ...

    def test_factorize_tz(self, tz_naive_fixture: Any) -> None:
        ...

    def test_factorize_dst(self) -> None:
        ...

    def test_unique(self, arr: Any, expected: Any) -> None:
        ...

    def test_asarray_tz_naive(self) -> None:
        ...

    def test_asarray_tz_aware(self) -> None:
        ...
