# Stubs for pandas.tests.indexes.datetimes.test_partial_slicing (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long

from typing import Any


class TestSlicing:
    def test_dti_slicing(self) -> None:
        ...

    def test_slice_keeps_name(self) -> None:
        ...

    def test_slice_with_negative_step(self) -> None:
        ...

    def test_slice_with_zero_step_raises(self) -> None:
        ...

    def test_slice_bounds_empty(self) -> None:
        ...

    def test_slice_duplicate_monotonic(self) -> None:
        ...

    def test_monotone_DTI_indexing_bug(self) -> None:
        ...

    def test_slice_year(self) -> None:
        ...

    def test_slice_quarter(self) -> None:
        ...

    def test_slice_month(self) -> None:
        ...

    def test_partial_slice(self) -> None:
        ...

    def test_partial_slice_daily(self) -> None:
        ...

    def test_partial_slice_hourly(self) -> None:
        ...

    def test_partial_slice_minutely(self) -> None:
        ...

    def test_partial_slice_second_precision(self) -> None:
        ...

    def test_partial_slicing_dataframe(self) -> None:
        ...

    def test_partial_slicing_with_multiindex(self) -> None:
        ...

    def test_partial_slice_doesnt_require_monotonicity(self) -> None:
        ...

    def test_loc_datetime_length_one(self) -> None:
        ...

    def test_selection_by_datetimelike(self, datetimelike: Any, op: Any, expected: Any) -> None:
        ...

    def test_getitem_with_datestring_with_UTC_offset(self, start: Any, end: Any) -> None:
        ...
