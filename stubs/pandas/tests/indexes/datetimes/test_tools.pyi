# Stubs for pandas.tests.indexes.datetimes.test_tools (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name,c-extension-no-member,too-many-ancestors

from typing import Any


class TestTimeConversionFormats:
    def test_to_datetime_format(self, cache: Any) -> None:
        ...

    def test_to_datetime_format_YYYYMMDD(self, cache: Any) -> None:
        ...

    def test_to_datetime_format_YYYYMMDD_overflow(self, input_s: Any, expected: Any) -> None:
        ...

    def test_to_datetime_format_integer(self, cache: Any) -> None:
        ...

    def test_int_to_datetime_format_YYYYMMDD_typeerror(self, int_date: Any, expected: Any) -> None:
        ...

    def test_to_datetime_format_microsecond(self, cache: Any) -> None:
        ...

    def test_to_datetime_format_time(self, cache: Any) -> None:
        ...

    def test_to_datetime_with_non_exact(self, cache: Any) -> None:
        ...

    def test_parse_nanoseconds_with_formula(self, cache: Any) -> None:
        ...

    def test_to_datetime_format_weeks(self, cache: Any) -> None:
        ...

    def test_to_datetime_parse_tzname_or_tzoffset(self, fmt: Any, dates: Any, expected_dates: Any) -> None:
        ...

    def test_to_datetime_parse_timezone_malformed(self, offset: Any) -> None:
        ...

    def test_to_datetime_parse_timezone_keeps_name(self) -> None:
        ...


class TestToDatetime:
    def test_to_datetime_iso_week_year_format(self, s: Any, _format: Any, dt: Any) -> None:
        ...

    def test_error_iso_week_year(self, msg: Any, s: Any, _format: Any) -> None:
        ...

    def test_to_datetime_dtarr(self, tz: Any) -> None:
        ...

    def test_to_datetime_pydatetime(self) -> None:
        ...

    def test_to_datetime_YYYYMMDD(self) -> None:
        ...

    def test_to_datetime_unparseable_ignore(self) -> None:
        ...

    def test_to_datetime_now(self) -> None:
        ...

    def test_to_datetime_today(self) -> None:
        ...

    def test_to_datetime_today_now_unicode_bytes(self) -> None:
        ...

    def test_to_datetime_dt64s(self, cache: Any) -> None:
        ...

    def test_to_datetime_dt64s_out_of_bounds(self, cache: Any, dt: Any) -> None:
        ...

    def test_to_datetime_array_of_dt64s(self, cache: Any) -> None:
        ...

    def test_to_datetime_tz(self, cache: Any) -> None:
        ...

    def test_to_datetime_different_offsets(self, cache: Any) -> None:
        ...

    def test_to_datetime_tz_pytz(self, cache: Any) -> None:
        ...

    def test_to_datetime_utc_true(self, cache: Any, init_constructor: Any, end_constructor: Any, test_method: Any) -> None:
        ...

    def test_to_datetime_utc_true_with_series_single_value(self, cache: Any) -> None:
        ...

    def test_to_datetime_utc_true_with_series_tzaware_string(self, cache: Any) -> None:
        ...

    def test_to_datetime_utc_true_with_series_datetime_ns(self, cache: Any, date: Any, dtype: Any) -> None:
        ...

    def test_to_datetime_tz_psycopg2(self, cache: Any) -> None:
        ...

    def test_datetime_bool(self, cache: Any) -> None:
        ...

    def test_datetime_invalid_datatype(self) -> None:
        ...

    def test_datetime_invalid_scalar(self, value: Any, format: Any, infer: Any) -> None:
        ...

    def test_datetime_outofbounds_scalar(self, value: Any, format: Any, infer: Any) -> None:
        ...

    def test_datetime_invalid_index(self, values: Any, format: Any, infer: Any) -> None:
        ...

    def test_to_datetime_cache(self, utc: Any, format: Any, constructor: Any) -> None:
        ...

    def test_to_datetime_cache_series(self, utc: Any, format: Any) -> None:
        ...

    def test_to_datetime_cache_scalar(self) -> None:
        ...

    def test_week_without_day_and_calendar_year(self, date: Any, format: Any) -> None:
        ...

    def test_to_datetime_coerce(self) -> None:
        ...

    def test_iso_8601_strings_with_same_offset(self) -> None:
        ...

    def test_iso_8601_strings_same_offset_no_box(self) -> None:
        ...

    def test_iso_8601_strings_with_different_offsets(self) -> None:
        ...

    def test_iso8601_strings_mixed_offsets_with_naive(self) -> None:
        ...

    def test_mixed_offsets_with_native_datetime_raises(self) -> None:
        ...

    def test_non_iso_strings_with_tz_offset(self) -> None:
        ...

    def test_timestamp_utc_true(self, ts: Any, expected: Any) -> None:
        ...

    def test_to_datetime_box_deprecated(self) -> None:
        ...


class TestToDatetimeUnit:
    def test_unit(self, cache: Any) -> None:
        ...

    def test_unit_consistency(self, cache: Any) -> None:
        ...

    def test_unit_with_numeric(self, cache: Any) -> None:
        ...

    def test_unit_mixed(self, cache: Any) -> None:
        ...

    def test_unit_rounding(self, cache: Any) -> None:
        ...

    def test_unit_ignore_keeps_name(self, cache: Any) -> None:
        ...

    def test_dataframe(self, cache: Any) -> None:
        ...

    def test_dataframe_dtypes(self, cache: Any) -> None:
        ...

    def test_dataframe_box_false(self) -> None:
        ...

    def test_dataframe_utc_true(self) -> None:
        ...

    def test_to_datetime_errors_ignore_utc_true(self) -> None:
        ...


class TestToDatetimeMisc:
    def test_to_datetime_barely_out_of_bounds(self) -> None:
        ...

    def test_to_datetime_iso8601(self, cache: Any) -> None:
        ...

    def test_to_datetime_default(self, cache: Any) -> None:
        ...

    def test_to_datetime_on_datetime64_series(self, cache: Any) -> None:
        ...

    def test_to_datetime_with_space_in_series(self, cache: Any) -> None:
        ...

    def test_to_datetime_with_apply(self, cache: Any) -> None:
        ...

    def test_to_datetime_types(self, cache: Any) -> None:
        ...

    def test_to_datetime_unprocessable_input(self, cache: Any) -> None:
        ...

    def test_to_datetime_other_datetime64_units(self) -> None:
        ...

    def test_to_datetime_list_of_integers(self) -> None:
        ...

    def test_to_datetime_overflow(self) -> None:
        ...

    def test_string_na_nat_conversion(self, cache: Any) -> None:
        ...

    def test_dti_constructor_numpy_timeunits(self, cache: Any, dtype: Any) -> None:
        ...

    def test_dayfirst(self, cache: Any) -> None:
        ...


class TestGuessDatetimeFormat:
    def test_guess_datetime_format_for_array(self) -> None:
        ...


class TestToDatetimeInferFormat:
    def test_to_datetime_infer_datetime_format_consistent_format(self, cache: Any) -> None:
        ...

    def test_to_datetime_infer_datetime_format_inconsistent_format(self, cache: Any) -> None:
        ...

    def test_to_datetime_infer_datetime_format_series_with_nans(self, cache: Any) -> None:
        ...

    def test_to_datetime_infer_datetime_format_series_start_with_nans(self, cache: Any) -> None:
        ...

    def test_to_datetime_iso8601_noleading_0s(self, cache: Any) -> None:
        ...


class TestDaysInMonth:
    def test_day_not_in_month_coerce(self, cache: Any) -> None:
        ...

    def test_day_not_in_month_raise(self, cache: Any) -> None:
        ...

    def test_day_not_in_month_ignore(self, cache: Any) -> None:
        ...


class TestDatetimeParsingWrappers:
    def test_parsers(self, date_str: Any, expected: Any, cache: Any) -> None:
        ...

    def test_na_values_with_cache(self, cache: Any, unique_nulls_fixture: Any, unique_nulls_fixture2: Any) -> None:
        ...

    def test_parsers_nat(self) -> None:
        ...

    def test_parsers_dayfirst_yearfirst(self, cache: Any) -> None:
        ...

    def test_parsers_timestring(self, cache: Any) -> None:
        ...

    def test_parsers_time(self) -> None:
        ...

    def test_parsers_timezone_minute_offsets_roundtrip(self, cache: Any, dt_string: Any, tz: Any, dt_string_repr: Any) -> None:
        ...


def units(request: Any) -> Any:
    ...


def epoch_1960() -> Any:
    ...


def units_from_epochs() -> Any:
    ...


def epochs(epoch_1960: Any, request: Any) -> Any:
    ...

def julian_dates() -> Any:
    ...


class TestOrigin:
    def test_to_basic(self, julian_dates: Any) -> None:
        ...

    def test_julian_round_trip(self) -> None:
        ...

    def test_invalid_unit(self, units: Any, julian_dates: Any) -> None:
        ...

    def test_invalid_origin(self) -> None:
        ...

    def test_epoch(self, units: Any, epochs: Any, epoch_1960: Any, units_from_epochs: Any) -> None:
        ...

    def test_invalid_origins(self, origin: Any, exc: Any, units: Any, units_from_epochs: Any) -> None:
        ...

    def test_invalid_origins_tzinfo(self) -> None:
        ...

    def test_to_datetime_out_of_bounds_with_format_arg(self, format: Any) -> None:
        ...

    def test_processing_order(self) -> None:
        ...

    def test_arg_tz_ns_unit(self, offset: Any, utc: Any, exp: Any) -> None:
        ...


def test_should_cache(listlike: Any, do_caching: Any) -> None:
    ...


def test_should_cache_errors(unique_share: Any, check_count: Any, err_message: Any) -> None:
    ...
