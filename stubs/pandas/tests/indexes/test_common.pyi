# Stubs for pandas.tests.indexes.test_common (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level

from typing import Any


class TestCommon:
    def test_droplevel(self, indices: Any) -> None:
        ...

    def test_constructor_non_hashable_name(self, indices: Any) -> None:
        ...

    def test_constructor_unwraps_index(self, indices: Any) -> None:
        ...

    def test_getitem_error(self, indices: Any, itm: Any) -> None:
        ...

    def test_corner_union(
            self, indices: Any, fname: Any, sname: Any,
            expected_name: Any) -> None:
        ...

    def test_to_flat_index(self, indices: Any) -> None:
        ...

    def test_wrong_number_names(self, indices: Any) -> None:
        ...

    def test_set_name_methods(self, indices: Any) -> None:
        ...

    def test_dtype_str(self, indices: Any) -> None:
        ...

    def test_hash_error(self, indices: Any) -> None:
        ...

    def test_copy_and_deepcopy(self, indices: Any) -> None:
        ...

    def test_unique(self, indices: Any) -> None:
        ...

    def test_get_unique_index(self, indices: Any) -> None:
        ...

    def test_sort(self, indices: Any) -> None:
        ...

    def test_mutability(self, indices: Any) -> None:
        ...

    def test_view(self, indices: Any) -> None:
        ...

    def test_compat(self, indices: Any) -> None:
        ...

    def test_searchsorted_monotonic(self, indices: Any) -> None:
        ...

    def test_pickle(self, indices: Any) -> None:
        ...

    def test_duplicated(self, indices: Any, keep: Any) -> None:
        ...

    def test_has_duplicates(self, indices: Any) -> None:
        ...
