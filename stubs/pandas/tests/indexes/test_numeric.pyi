# Stubs for pandas.tests.indexes.test_numeric (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,blacklisted-name

from typing import Any
from pandas.tests.indexes.common import Base


class Numeric(Base):
    def test_can_hold_identifiers(self) -> None:
        ...

    def test_numeric_compat(self) -> None:
        ...

    def test_explicit_conversions(self) -> None:
        ...

    def test_index_groupby(self) -> None:
        ...

    def test_where(self, klass: Any) -> None:
        ...

    def test_insert(self) -> None:
        ...


class TestFloat64Index(Numeric):
    indices: Any = ...
    def setup_method(self, method: Any) -> None:
        ...

    def create_index(self):
        ...

    def test_repr_roundtrip(self) -> None:
        ...

    def check_is_index(self, i: Any) -> None:
        ...

    def check_coerce(self, a: Any, b: Any, is_float_index: bool = ...) -> None:
        ...

    def test_constructor(self) -> None:
        ...

    def test_constructor_invalid(self) -> None:
        ...

    def test_constructor_coerce(self) -> None:
        ...

    def test_constructor_explicit(self) -> None:
        ...

    def test_astype(self) -> None:
        ...

    def test_type_coercion_fail(self, any_int_dtype: Any) -> None:
        ...

    def test_type_coercion_valid(self, float_dtype: Any) -> None:
        ...

    def test_equals_numeric(self) -> None:
        ...

    def test_get_indexer(self) -> None:
        ...

    def test_get_loc(self) -> None:
        ...

    def test_get_loc_na(self) -> None:
        ...

    def test_get_loc_missing_nan(self) -> None:
        ...

    def test_contains_nans(self) -> None:
        ...

    def test_contains_not_nans(self) -> None:
        ...

    def test_doesnt_contain_all_the_things(self) -> None:
        ...

    def test_nan_multiple_containment(self) -> None:
        ...

    def test_astype_from_object(self) -> None:
        ...

    def test_fillna_float64(self) -> None:
        ...

    def test_take_fill_value(self) -> None:
        ...


class NumericInt(Numeric):
    def test_view(self) -> None:
        ...

    def test_is_monotonic(self) -> None:
        ...

    def test_is_strictly_monotonic(self) -> None:
        ...

    def test_logical_compat(self) -> None:
        ...

    def test_identical(self) -> None:
        ...

    def test_join_non_unique(self) -> None:
        ...

    def test_join_self(self, kind: Any) -> None:
        ...

    def test_union_noncomparable(self) -> None:
        ...

    def test_cant_or_shouldnt_cast(self) -> None:
        ...

    def test_view_index(self) -> None:
        ...

    def test_prevent_casting(self) -> None:
        ...

    def test_take_preserve_name(self) -> None:
        ...

    def test_take_fill_value(self) -> None:
        ...

    def test_slice_keep_name(self) -> None:
        ...


class TestInt64Index(NumericInt):
    indices: Any = ...
    def setup_method(self, method: Any) -> None:
        ...

    def create_index(self):
        ...

    def test_constructor(self) -> None:
        ...

    def test_constructor_corner(self) -> None:
        ...

    def test_constructor_coercion_signed_to_unsigned(self, uint_dtype: Any) -> None:
        ...

    def test_constructor_unwraps_index(self) -> None:
        ...

    def test_coerce_list(self) -> None:
        ...

    def test_get_indexer(self) -> None:
        ...

    def test_intersection(self) -> None:
        ...

    def test_join_inner(self) -> None:
        ...

    def test_join_left(self) -> None:
        ...

    def test_join_right(self) -> None:
        ...

    def test_join_non_int_index(self) -> None:
        ...

    def test_join_outer(self) -> None:
        ...


class TestUInt64Index(NumericInt):
    indices: Any = ...
    def setup_method(self, method: Any) -> None:
        ...

    def create_index(self):
        ...

    def test_constructor(self) -> None:
        ...

    def test_get_indexer(self) -> None:
        ...

    def test_intersection(self) -> None:
        ...

    def test_join_inner(self) -> None:
        ...

    def test_join_left(self) -> None:
        ...

    def test_join_right(self) -> None:
        ...

    def test_join_non_int_index(self) -> None:
        ...

    def test_join_outer(self) -> None:
        ...


def test_int_float_union_dtype(dtype: Any) -> None:
    ...


def test_range_float_union_dtype() -> None:
    ...
