# Stubs for pandas.core.indexes.numeric (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name

from typing import Any, Optional
from pandas.core.indexes.base import Index


class NumericIndex(Index):
    def __new__(cls, data: Optional[Any] = ..., dtype: Optional[Any] = ...,
                copy: bool = ..., name: Optional[Any] = ...,
                fastpath: Optional[Any] = ...) -> Any:
        ...

    def is_all_dates(self) -> Any:
        ...

    def insert(self, loc: Any, item: Any) -> Any:
        ...


class IntegerIndex(NumericIndex):
    def __contains__(self, key: Any) -> Any:
        ...


class Int64Index(IntegerIndex):
    __doc__: Any = ...

    def inferred_type(self) -> Any:
        ...

    @property
    def asi8(self) -> Any:
        ...


class UInt64Index(IntegerIndex):
    __doc__: Any = ...

    def inferred_type(self) -> Any:
        ...

    @property
    def asi8(self) -> Any:
        ...


class Float64Index(NumericIndex):
    __doc__: Any = ...

    def inferred_type(self) -> Any:
        ...

    def astype(self, dtype: Any, copy: bool = ...) -> Any:
        ...

    def get_value(self, series: Any, key: Any) -> Any:
        ...

    def equals(self, other: Any) -> Any:
        ...

    def __contains__(self, other: Any) -> Any:
        ...

    def get_loc(self, key: Any, method: Optional[Any] = ...,
                tolerance: Optional[Any] = ...) -> Any:
        ...

    def is_unique(self) -> Any:
        ...

    def isin(self, values: Any, level: Optional[Any] = ...) -> Any:
        ...
