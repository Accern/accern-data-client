# Stubs for pandas.core.indexes.frozen (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,redefined-outer-name,no-self-use,invalid-name
# pylint: disable=relative-beyond-top-level,line-too-long,arguments-differ
# pylint: disable=no-member,too-few-public-methods,keyword-arg-before-vararg
# pylint: disable=super-init-not-called,abstract-method,redefined-builtin
# pylint: disable=unused-import,useless-import-alias,signature-differs
# pylint: disable=blacklisted-name


from typing import Any, Optional
from pandas.core.base import PandasObject
import numpy as np

class FrozenList(PandasObject, list):
    def union(self, other: Any) -> Any:
        ...

    def difference(self, other: Any) -> Any:
        ...

    __add__: Any = ...
    __iadd__: Any = ...
    def __getslice__(self, i: Any, j: Any) -> Any:
        ...

    def __getitem__(self, n: Any) -> Any:
        ...

    def __radd__(self, other: Any) -> Any:
        ...

    def __eq__(self, other: Any) -> Any:
        ...

    __req__: Any = ...

    def __mul__(self, other: Any) -> Any:
        ...

    __imul__: Any = ...

    def __reduce__(self) -> Any:
        ...

    def __hash__(self) -> int:
        ...

    __setitem__: Any = ...
    __setslice__: Any = ...
    __delitem__: Any = ...
    __delslice__: Any = ...
    pop: Any = ...
    append: Any = ...
    extend: Any = ...
    remove: Any = ...
    sort: Any = ...
    insert: Any = ...

class FrozenNDArray(PandasObject, np.ndarray):
    def __new__(cls, data: Any, dtype: Optional[Any] = ..., copy: bool = ...) -> Any:
        ...

    __setitem__: Any = ...
    __setslice__: Any = ...
    __delitem__: Any = ...
    __delslice__: Any = ...
    put: Any = ...
    itemset: Any = ...
    fill: Any = ...
    def values(self) -> Any:
        ...

    def searchsorted(self, value: Any, side: str = ..., sorter: Optional[Any] = ...) -> Any:
        ...
