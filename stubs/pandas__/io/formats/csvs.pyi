"""
This type stub file was generated by pyright.
"""

import numpy as np
from typing import Hashable, Sequence, TYPE_CHECKING
from pandas._typing import CompressionOptions, FilePath, FloatFormatType, IndexLabel, StorageOptions, WriteBuffer
from pandas.util._decorators import cache_readonly
from pandas.core.indexes.api import Index
from pandas.io.formats.format import DataFrameFormatter

"""
Module for formatting output data into CSV files.
"""
if TYPE_CHECKING:
    ...
class CSVFormatter:
    cols: np.ndarray
    def __init__(self, formatter: DataFrameFormatter, path_or_buf: FilePath | WriteBuffer[str] | WriteBuffer[bytes] = ..., sep: str = ..., cols: Sequence[Hashable] | None = ..., index_label: IndexLabel | None = ..., mode: str = ..., encoding: str | None = ..., errors: str = ..., compression: CompressionOptions = ..., quoting: int | None = ..., line_terminator: str | None = ..., chunksize: int | None = ..., quotechar: str | None = ..., date_format: str | None = ..., doublequote: bool = ..., escapechar: str | None = ..., storage_options: StorageOptions = ...) -> None:
        ...
    
    @property
    def na_rep(self) -> str:
        ...
    
    @property
    def float_format(self) -> FloatFormatType | None:
        ...
    
    @property
    def decimal(self) -> str:
        ...
    
    @property
    def header(self) -> bool | Sequence[str]:
        ...
    
    @property
    def index(self) -> bool:
        ...
    
    @property
    def has_mi_columns(self) -> bool:
        ...
    
    @cache_readonly
    def data_index(self) -> Index:
        ...
    
    @property
    def nlevels(self) -> int:
        ...
    
    @property
    def write_cols(self) -> Sequence[Hashable]:
        ...
    
    @property
    def encoded_labels(self) -> list[Hashable]:
        ...
    
    def save(self) -> None:
        """
        Create the writer & save.
        """
        ...
    


